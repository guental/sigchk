#!/bin/sh
{
# 356c0eccfe42034b1855129b431d70bb
# f992bf6d5a8f2aa18713c4b04cbf1f11dac3e87addf4c5ab4e4dd883cea57d67c1f024c2dd84cf4149ce23dc471ab97ab9bd0b0d38fa6235853c376cb55636e3
set -u

necho() {
printf -- '%s' "${@}"
}

echo() {
printf -- '%s\n' "${@}"
}

echo_colour() {
printf -- "${format:-"%b\n"}" "${@}"
}

echoerr() {
echo_colour "${@}" 1>&2
code=1
}

echover() {
case "${@}" in
	"${echover_past_msg:-$'\r\n'}")
		return 0
	;;
	*)
		echo_colour "${@}" 1>&2
	;;
esac
echover_past_msg="${@}"
}

pkgchk() {
local "count" "line" "type"
case "${#}" in
	0)
		return 0
	;;
esac
count=0
for line in "${@}"; do
	type=$( type "${line##*"/"}" 2>/dev/null )
	case "${type##*"/"}" in
		"${line##*"/"}"|"${line##*"/"} is ${line##*"/"}")
			count=$(( count + 1 ))
		;;
	esac
done
case "${count:-"0"}" in
	"${#}")
		return 0
	;;
	*)
		printf -- '%s\n' "${name}: please install: ${*}"
		exit 1	
	;;
esac
}

is_file_check() {
if [ -d "${1}" ]; then
	echo_colour "${bold_name}: ${data}: Is a directory" 1>&2
	return 1
elif [ -e "${1}" ]; then
	if [ -r "${1}" ]; then
		return 0
	else
		echo_colour "${bold_name}: ${data}: Permission denied" 1>&2
		return 1
	fi
else
	echo_colour "${bold_name}: ${data}: No such file or directory" 1>&2
	return 1
fi
}

is_file() {
local "file"
case "${#}" in
	0)
		return 1
	;;
	1)
		is_file_check "${1}"
	;;
	*)
		for file in "${@}"; do
			is_file_check "${file}"
		done
	;;
esac
}

enable_colourful_text() {
reset="\e[0;0m"
bold="\e[0;1m"
faint="\e[0;2m"
italic="\e[0;3m"
underline="\e[0;4m"
blink="\e[0;5m"
reverse="\e[0;7m"
conceal="\e[0;8m"
crossed_out="\e[0;9m"
black="\e[30;30m"
red="\e[30;31m"
green="\e[30;32m"
yellow="\e[30;33m"
blue="\e[30;34m"
magenta="\e[30;35m"
cyan="\e[30;36m"
white="\e[30;37m"
light_black="\e[30;90m"
light_red="\e[30;91m"
light_green="\e[30;92m"
light_yellow="\e[30;93m"
light_blue="\e[30;94m"
light_magenta="\e[30;95m"
light_cyan="\e[30;96m"
light_white="\e[30;97m"
}

detect_colour_ls_one_mdate() {
local "file" "list" "list_files" "old_file"
for file in "${PWD}/"*; do
	if [ -f "${file}" ]; then
		if [ "${file}" -nt "${old_file:-"${0}"}" ]; then		
			old_file="${file}"
		fi
	fi
done
if [ -n "${old_file:-""}" ]; then
	if ! [ -s "${old_file}" ]; then
		return 1
	else
		return 0
	fi
else
	return 0
fi
}

set_colour() {
case "${0}" in
	"sh"|"-bash")
		return 1
	;;
	*)
		case "${TERM},${SHLVL:-"0"},${BASH_SUBSHELL:-"0"}" in
			xterm-256color,1,0)
				if detect_colour_ls_one_mdate; then
					enable_colourful_text
					colourful_text=1
					return 0
				else
					return 1
				fi
			;;
			*)
				return 1
			;;
		esac
	;;
esac
}

show_help() {
local "text"
text="Usage: ${0##*"/"} [OPTION]... [FILE]...
Check integrity of GOG games and goodies.
"
case "${dev_mode:-"0"}" in
	0)
text="${text}
Filetypes: 7Z, AVI, BIN, EXE, GZ, JPG, MKV, MP4, PDF, PNG, RAR, ZIP.

  -f, --fingerprint
        show unknown installer fingerprints"
	;;
	1)
text="${text}
Filetypes: 7Z, APK, AVI, BIN, BR, BZ2, DEB, EXE, GZ, JAR, JPG, MKV, MP4, MSI, PDF, PNG, RAR, XZ, ZIP, ZST.

  -f, --fingerprint-gog
        show unknown GOG installer fingerprints"
	;;
esac
text="${text}
  -t, --timestamp
        try to recover modification date"
case "${dev_mode:-"0"}" in
	0)
text="${text}
  -s, --strict
        verify installer authenticity"
	;;
	1)
text="${text}
  -s, --strict-gog
        verify GOG installer authenticity"
	;;
esac
text="${text}
      --ignore-missing
        ignore missing installer BINs
      --no-exceptions
        do not use built-in checksums
      --no-cert-exceptions
        do not use built-in certificates
      --no-local
        do not use local checksums"
case "${dev_mode:-"0"}" in
	1)
		if type attr >/dev/null 2>&1; then
		text="${text}
  -x, --xattrs
        use BLAKE2b extended attributes
  -dx, --delete-xattrs
        delete BLAKE2b extended attributes"
		fi
		if type mkpar quadsum >/dev/null 2>&1; then
			text="${text}
  -p, --strict-gog-parchive
        make recovery check data"
		fi
	;;
esac
case "${colourful_text:-"0"}" in
	1)
	text="${text}
  -c, --colour
        colourize the output"
	;;
esac
text="${text}
  -h, --help
        display this help and exit
      --version
        output version information and exit
  -q, --quiet
        quiet mode"
printf -- '%s\n' "${text}"
exit "${1:-"0"}"
}

setdevmode() {
local "dev_hash" "timezone"
dev_mode=0
if type sha1sum mkpar quadsum >/dev/null 2>&1; then
	if [ -e "/etc/timezone" ]; then
		timezone=$( cat -- "/etc/timezone" )
	fi
	dev_hash=$( necho "${timezone:-""}${LANG:-""}${USER:-""}" | sha1sum )
	case "${dev_hash%%"  -"}" in
		"b857b8b1edaf401a6808382f84a074820d58c802")
			dev_mode=1
		;;
	esac
fi
}

setopt() {
local "OPT" "OPTARG" "OPTERR" "OPTIND"
OPTIND=1
OPTERR=0
while getopts "cCfFvVtTpPdDsSxXhHqQ-:" OPT; do
	case "${OPT}" in
		c|C)
			colourize=1
		;;
		f|F)
			fingerprint=1
			is_gog=1
			strict=1
			no_local=1
		;;
		t|T)
			timestamp=1
		;;
		p|P)
			recovery=1
		;;
		s|S)
			is_gog=1
			strict=1
		;;
		d|D)
			no_xattrs=1
		;;
		x|X)
			is_xattrs=1
		;;
		h|H)
			show_help
		;;
		q|Q)
			exec 2>/dev/null
		;;
		v|V)
			:
		;;
		-)
			case "${OPTARG}" in
				colour|color)
					colourize=1
				;;
				dry-run)
					exit 0
				;;
				im|ignore|ignore-missing)
					ignore_missing=1
				;;
				fp|fingerprint|show-fingerprint|gog-fingerprint|gog-show-fingerprint|fingerprint-gog|show-fingerprint-gog)
					fingerprint=1
					is_gog=1
					strict=1
					no_local=1
				;;
				t|T|ts|time|timestamp|stamp)
					timestamp=1
				;;
				p|P|parchive|strict-parchive|strict-gog-parchive)
					recovery=1
					is_gog=1
					strict=1
				;;
				s|S|strict|gog-strict|strict-gog|strict-yes-gog)
					is_gog=1
					strict=1
				;;
				nl|NL|no-local)
					no_local=1
				;;
				d|D|delete-xattrs)
					no_xattrs=1
				;;
				x|X|xattrs)
					is_xattrs=1
				;;
				ne|NE|no-exc|no-except|no-exceptions)
					no_excl=1
					pdf_exceptions=0
					exe_exceptions=0
					bin_exceptions=0
				;;
				nce|NCE|no-cert|no-certificates|no-cert-exc|no-cert-except|no-cert-exceptions|no-cert-exceptions|no-certificate-exceptions)
					osslsigncode_certificate_fingerprints=0
					strict=0
				;;
				gog)
					is_gog=1
					strict=0
				;;
				x|X|xattrs)
					is_xattrs=1
				;;
				h|H|help)
					show_help
				;;
				version)
					printf -- '%s\n' "${name} ${version:-"1.2.5"}"
					exit 0
				;;
				q|Q|quiet)
					exec 2>/dev/null
				;;
				v|V|verbose)
					:
				;;
				*)
					show_help 1 1>&2
				;;
			esac
		;;
		*)
			show_help 1 1>&2
		;;
	esac
done
shift $(( OPTIND - 1 ))
OPTIND=1
OPTERR=1
case "${colourize:-"0"}" in
	0)
		format="%s\n"
		unset "reset" "bold" "faint" "italic" "underline" "blink" "reverse" "conceal" "crossed_out" "black" "red" "green" "yellow" "blue" "magenta" "cyan" "white" "light_black" "light_red" "light_green" "light_yellow" "light_blue" "light_magenta" "light_cyan" "light_white"
	;;
esac
bold_name="${bold:-""}${name}${reset:-""}"
green_ok="${green:-""}OK${reset:-""}"
red_failed="${red:-""}FAILED${reset:-""}"

case "${#}" in
	0)
		exit 0
	;;
	*)
		for data in "${@}"; do
			if is_file "${data}"; then
				process "${data}"
			else
				case "${dry_run:-"0"}" in
					0)
						code=1
					;;
				esac
			fi
		done
	;;
esac
}

selfcheck() {
local "self" "self_no_hash" "self_hash" "self_check"
self=$( base64 --wrap=0 -- "${0}" 2>/dev/null )
self="${self:-"Cg=="}"
self_no_hash=$( printf -- '%s\n' "${self}" | base64 -d 2>/dev/null | grep -Ev -- "^# [a-f0-9]{32}$|^# [a-f0-9]{128}$" 2>/dev/null | base64 --wrap=0 2>/dev/null )
self_no_hash="${self_no_hash:-"Cg=="}"
if type b2sum >/dev/null 2>&1; then
	self_hash=$( printf -- '%s\n' "${self}" | base64 -d 2>/dev/null | grep -Em 1 -- "^# [a-f0-9]{128}$" 2>/dev/null )
	self_check=$( printf -- '%s\n' "${self_no_hash}" | base64 -d 2>/dev/null | b2sum 2>/dev/null )
else
	self_hash=$( printf -- '%s\n' "${self}" | base64 -d 2>/dev/null | grep -Em 1 -- "^# [a-f0-9]{32}$" 2>/dev/null )
	self_check=$( printf -- '%s\n' "${self_no_hash}" | base64 -d 2>/dev/null | md5sum 2>/dev/null )
fi
self_hash="${self_hash:-"unknown"}"
self_check="${self_check:-"none"}"
case "${self_hash##"# "}" in
	"${self_check%%"  -"}")
		:
	;;
	*)
		printf -- '%s\n' "${0##*"/"}: self-integrity verification: FAILED" 1>&2
		exit 1
	;;
esac
}

devchk() {
case "${dev_mode:-"0"}" in
	0)
		case "${#}" in
			0)
				case "${is_gog:-"1"}${is_xattrs:-"0"}" in
					00|01)
						show_help 1 1>&2
					;;
				esac
			;;
			1)
				case "${1}" in
					*.7[zZ]|*.[aA][vV][iI]|*.[bB][iI][nN]|*.[eE][xX][eE]|*.[gG][zZ]|*.[jJ][pP][gG]|*.[mM][kK][vV]|*.[mM][pP]4|*.[pP][dD][fF]|*.[pP][nN][gG]|*.[rR][aA][rR]|*.[zZ][iI][pP])
						return 0
					;;
					*)
						return 1
					;;
				esac
			;;
			*)
				return 1
			;;
		esac
	;;
esac
}

osslsigncode_echoerr() {
echo "${1:-""}: ${2:-"UNKNOWN"}

Failed" 1>&2
osslsigncode_code=1
return 1
}

osslsigncode_show_help() {
echo "Usage: ${name:-"${0##*"/"}"}

	[ --version | -v ]

	extract-signature [ -in ] <infile> [ -out ] <outfile>

	verify [ -in ] <infile>
"
}

osslsigncode_extract_signature() {
local "file_type" "file_size" "find_cert" "offset_1" "offset_2" "offset_3" "offset_4" "offset" "size_1" "size_2" "size_3" "size_4" "size" "full_size" "raw_signature" "cert_mark" "raw_signature_cut"
file_type=$( xxd -l 4 -p -s 0 -- "${1}" 2>/dev/null )
case "${file_type:-""}" in
	"4d5a5000")
		:
	;;
	*)
		case "${1}" in
			*?.[eE][xX][eE])
				osslsigncode_echoerr "Corrupt PE file - found unknown magic" "${1}"
				return 1
			;;
			*)
				osslsigncode_echoerr "Unexpected file type" "${1}"
				return 1
			;;
		esac
	;;
esac
file_size=$( stat --printf='%s' -- "${1}" 2>/dev/null )
case "${file_size:-""}" in
	0|"")
		osslsigncode_echoerr "Can not get file size" "${1}"
		return 1
	;;
esac
if [ "${file_size:-"0"}" -lt 252 ]; then
	osslsigncode_echoerr "Corrupt DOS file - too short" "${1}"
	return 1
elif [ "${file_size:-"0"}" -le 406 ]; then
	osslsigncode_echoerr "Can not handle PE files without certificate table resource" "${1}"
	return 1
fi

find_cert=$( xxd -l 8 -p -s 408 -- "${1}" 2>/dev/null )
case "${find_cert:-"0000000000000000"}" in
	0000000000000000|00000000*|*00000000)
		osslsigncode_echoerr "PE file does not have any signature" "${1}"
		return 1
	;;
esac


offset_1=$( echo "${find_cert}" | cut -c 1-2 )
offset_2=$( echo "${find_cert}" | cut -c 3-4 )
offset_3=$( echo "${find_cert}" | cut -c 5-6 )
offset_4=$( echo "${find_cert}" | cut -c 7-8 )
offset_4="${offset_4##"00"}"
offset="${offset_4:-""}${offset_3:-""}${offset_2:-""}${offset_1:-""}"
offset=$( printf -- '%d\n' "0x${offset}" )
if [ "${file_size:-"252"}" -lt "${offset:-"406"}" ]; then
	osslsigncode_echoerr "Corrupt PE file - too short" "${1}"
	return 1
fi


size_1=$( echo "${find_cert}" | cut -c 9-10 )
size_2=$( echo "${find_cert}" | cut -c 11-12 )
size_3=$( echo "${find_cert}" | cut -c 13-14 )
size_4=$( echo "${find_cert}" | cut -c 15-16 )
size_1="${size_1#"00"}"
size_2="${size_2#"00"}"
size_3="${size_3#"00"}"
size_4="${size_4#"00"}"
size="${size_4:-""}${size_3:-""}${size_2:-""}${size_1:-""}"
cert_mark="${size_1:-""}${size_2:-""}${size_3:-""}${size_4:-""}"
size=$( printf -- '%d\n' "0x${size}" )
osslsigncode_signature_size="${size}"
case "${#cert_mark}" in
	0)
		osslsigncode_echoerr "Can not extract PE file signature size" "${1}"
		return 1
	;;
	2)
		cert_mark="${cert_mark}000000"
	;;
	4)
		cert_mark="${cert_mark}0000"
	;;
	6)
		cert_mark="${cert_mark}00"
	;;
	8)
		:
	;;
	*)
		osslsigncode_echoerr "Corrupt PE file signature - size is incorrect" "${1}"
		return 1
	;;
esac
cert_mark="${cert_mark}000202003082"
full_size=$((offset + size ))
if ! [ "${file_size}" = "${full_size:-"406"}" ]; then
	osslsigncode_echoerr "Corrupt PE file - current signature not at end of file" "${1}"
	return 1
else
	unset "full_size"
fi
size=$(( size ))
raw_signature=$( xxd -c 256 -l "${size}" -p -s "${offset}" -- "${1}" )
case "${raw_signature}" in
	"${cert_mark}"*)
		case "${2:-"PEM"}" in
			"DER")
				osslsigncode_signature="${raw_signature}"
			;;
			*)
				raw_signature="3082${raw_signature#"${cert_mark}"}"
				unset "cert_mark"
				raw_signature=$( echo "${raw_signature}" | xxd -p -r | base64 -w 64 )
				osslsigncode_signature=$( echo "-----BEGIN PKCS7-----" "${raw_signature}" "-----END PKCS7-----" )
			;;
		esac
	;;
	*)
		osslsigncode_echoerr "Failed to extract PKCS7 data" "${1}"
		return 1
	;;
esac
}

osslsigncode_extract() {
local "osslsigncode_signature"
if osslsigncode_extract_signature "${1}" "DER"; then
	echo "${osslsigncode_signature}" | xxd -p -r
else
	return 1
fi
}

osslsigncode_verify_extract_checksum() {
local "line" "pe_1" "pe_2" "pe_3" "pe_4"
line=$( xxd -l 4 -p -s 344 -u -- "${1}" 2>/dev/null )
case "${line:-""}" in
	"")
		osslsigncode_echoerr "Corrupt PE file - too short" "${1}"
		return 1
	;;
esac
pe_1=$( echo "${line}" | cut -c 1-2 )
pe_2=$( echo "${line}" | cut -c 3-4 )
pe_3=$( echo "${line}" | cut -c 5-6 )
pe_4=$( echo "${line}" | cut -c 7-8 )
line="${pe_4}${pe_3}${pe_2}${pe_1}"


osslsigncode_checksum="${line}"
}

osslsigncode_verify_checksum() {
local "script" "line"
script="#!/usr/bin/env python
from __future__ import print_function
import os, sys, struct
sys.tracebacklimit = 0
from io import DEFAULT_BUFFER_SIZE as DEFAULT
read = False
try:
	with open(\"${1}\", 'rb') as openfile:			
		skip = 344
			
		pe = 0
		
		while True:
			DATA = openfile.read(DEFAULT)
			left = len(DATA) % 4
			max = len(DATA) + ((4-left) * ( left != 0 ))
			if not DATA:
					break
	
			for i in range( int(max / 4) ):
				if read == False:
					if i == int(skip / 4):
						read = True
						continue
				if i+1 == (int(max / 4)) and left:
					line = struct.unpack('I', DATA[i*4:]+ (b'\0' * (4-left)) )[0]
				else:
					line = struct.unpack('I', DATA[ i*4 : i*4+4 ])[0]
				pe += line
				if pe >= 2**32:
					pe = (pe & 0xffffffff) + (pe >> 32)
	
		pe = (pe & 0xffff) + (pe >> 16)
		pe = (pe) + (pe >> 16)
		pe = pe & 0xffff
	
		pe = pe + os.path.getsize(\"${1}\")
		print('%08X' % (pe & 0xffffffff ))
except KeyboardInterrupt:
	try:
		sys.stdout.close()
	except:
		pass
	try:
		sys.stderr.close()
	except:
		pass
	print ('')
	sys.exit(130)"
echo "Current PE checksum   : ${2}"
line=$( echo "${script}" | python )
case "${2}" in
	"${line}")
		echo "Calculated PE checksum: ${line}" ""
		osslsigncode_verify_checksum_state="ok"
	;;
	*)
		echo "Calculated PE checksum: ${line} !MISMATCH" ""
		osslsigncode_verify_checksum_state="failed"
		osslsigncode_code=1
		return 1
	;;
esac
}

osslsigncode_verify_signature_array() {
echo "${1}" | openssl pkcs7 -inform PEM -print_certs -text -in /dev/stdin 2>/dev/null | while read -r "line"; do
	case "${line}" in
		"-----BEGIN CERTIFICATE-----")
			num=$(( num + 1 ))
			line_start=1
		;;
		"-----END CERTIFICATE-----")
			echo "array_item_${num}=${line}"
			unset "line_start"
			continue
		;;
	esac
	case "${line_start:-"0"}" in
		1)
			echo "array_item_${num}=${line}"
			continue
		;;
	esac
done
}

osslsigncode_verify_signature_strict() {
local "line" "item" "num"
num=0
case "${strict:-"0"}" in
	0)
		return 0
	;;
esac
case "${fingerprint:-"0"}" in
	0)
		for item in $( seq 1 "${orig_num}" ); do
			line=$( echo "${2}" | grep -- "^array_item_${item}=" | grep -Ev -- "-----BEGIN CERTIFICATE-----|-----END CERTIFICATE-----" | sed "s/array_item_${item}=//g"  | base64 -d | sha512sum )
			line="${line%%"  -"}"
			if ! echo "${osslsigncode_certificate_fingerprints}" | grep "^${line}  " >/dev/null; then
				return 1
			fi
		done
	;;
	*)
		for item in $( seq 1 "${orig_num}" ); do
			line=$( echo "${2}" | grep -- "^array_item_${item}=" | grep -Ev -- "-----BEGIN CERTIFICATE-----|-----END CERTIFICATE-----" | sed "s/array_item_${item}=//g"  | base64 -d | sha512sum )
			line="${line%%"  -"}"
			if ! echo "${osslsigncode_certificate_fingerprints}" | grep "^${line}  " >/dev/null; then
				echo "${line}  ${1:-""}"
			fi
		done
	;;
esac
}

osslsigncode_verify_signature() (
	
	osslsigncode_verify_signature_clean_exit() {
		case "${tmpdir:-""}" in
			"")
				:
			;;
			*)
				rm -f -- "${tmpdir}/"[0-9]".pem"
				rmdir -- "${tmpdir}/" 2>/dev/null
			;;
		esac
		case "${1:-""}" in
			130)
				echo; return 130
			;;
			*)
			return "${code:-"0"}"
			;;
		esac
	}

local "line" "line_start" "num" "array" "num_back" "num_base" "num_next" "orig_num" "tmpdir"	
trap 'osslsigncode_verify_signature_clean_exit 130' INT
trap 'osslsigncode_verify_signature_clean_exit' EXIT TERM QUIT
if [ -d /dev/shm ]; then
	tmpdir=$( mktemp -p "/dev/shm/" -d "osslsigncode-XXXXXXXXXXXX" 2>/dev/null )	
else
	case "${TMPDIR:-""}" in
		"")
			tmpdir=$( mktemp -p "/tmp/" -d "osslsigncode-XXXXXXXXXXXX" 2>/dev/null )	
		;;
		*)
			if [ -d "${TMPDIR:-""}" ]; then
				tmpdir=$( mktemp -p "${TMPDIR}/" -d "osslsigncode-XXXXXXXXXXXX" 2>/dev/null )	
			else
				tmpdir=$( mktemp -p "/tmp/" -d "osslsigncode-XXXXXXXXXXXX" 2>/dev/null )	
			fi
		;;
	esac
fi
if ! [ -d "${tmpdir:-""}" ]; then
	return 1
fi
num=0
array=$( osslsigncode_verify_signature_array "${2}" )
num=$( echo "${2}" | openssl pkcs7 -inform PEM -print_certs -text -in /dev/stdin 2>/dev/null | grep -c -- '-----BEGIN CERTIFICATE-----' )
orig_num="${num}"
for item in $( seq 1 "${num}" ); do
	file_item="${item}"
	case "${item}" in
		1)
			if ! echo "${array}" | grep -- "^array_item_${item}=" | sed "s/array_item_${item}=//g" | openssl asn1parse -inform PEM -in /dev/stdin | grep -m 1 -- ' :GOG' >/dev/null 2>&1; then
				echo "${array}" | grep -- "^array_item_${item}=" | sed "s/array_item_${item}=//g" > "${tmpdir}/0.pem"
				item_back=1
				continue
			fi
		;;
	esac
	case "${item_back:-"0"}" in
		1)
			file_item=$(( item - 1 ))
		;;
	esac
	echo "${array}" | grep -- "^array_item_${item}=" | sed "s/array_item_${item}=//g" > ${tmpdir}/"${file_item}.pem"
	if ! [ -s "${tmpdir}/${file_item}.pem" ]; then
		func_code=1
		return 1
	fi
done
case "${item_back:-"0"}" in
	1)
		num=$(( num - 1 ))
		num_base=0
	;;
esac
for item in $( seq "${num_base:-"1"}" "${num}" ); do
	num_back=$(( num - 1 ))
	case "${item}" in
		0)
			if [ -e "${tmpdir}/0.pem" ]; then
				if ! openssl verify -untrusted "${tmpdir}/${num}.pem" -no_check_time -- "${tmpdir}/0.pem" >/dev/null 2>&1; then
					func_code=1
					return 1
				fi
			fi
		;;
		1)
			if ! openssl verify -untrusted "${tmpdir}/2.pem" -no_check_time -- "${tmpdir}/1.pem" >/dev/null 2>&1; then
				func_code=1
				return 1
			fi
		;;
		"${num}")
			if ! openssl verify -untrusted "${tmpdir}/${num_back}.pem" -no_check_time -- "${tmpdir}/${num}.pem" >/dev/null 2>&1; then
				func_code=1
				return 1
			fi
		;;
	esac
done
num_back=$(( num - 1 ))
for item in $( seq 2 "${num_back}" ); do
	num_next=$(( item + 1 ))
	if ! openssl verify -untrusted "${tmpdir}/${num_next}.pem" -no_check_time -- "${tmpdir}/${item}.pem" >/dev/null 2>&1; then
		func_code=1
		return 1
	fi
done
if [ -e "${tmpdir}/" ]; then
	rm -f -- "${tmpdir}/"[0-9]".pem"
	rmdir -- "${tmpdir}/" 2>/dev/null
fi
if ! osslsigncode_verify_signature_strict "${1}" "${array}"; then
	osslsigncode_echoerr "Corrupt PE file signature - fingerprints do not match" "${1}"
	func_code=1
	return 1
fi
)

osslsigncode_verify_extract_signature_checksum_line() {
local "line" "type"
echo "${1}" | openssl asn1parse -inform PEM -in /dev/stdin 2>/dev/null | while read -r "line"; do
	case "${line}" in
		*?[0-9]"5 prim: OBJECT"*":sha"?*)
			continue
		;;
		*?"5 prim: OBJECT"*":sha"?*)
			hash_type="${line##*":"}"
		;;
		*?[0-9]"20 prim: OCTET STRING"*"[HEX DUMP]:"?*)
			continue
		;;
		*?"20 prim: OCTET STRING"*"[HEX DUMP]:"?*)
			echo "${hash_type:-"UNKNOWN"}${t}${line##*"[HEX DUMP]:"}"
			break
		;;
		*)
			continue
		;;
	esac
done
}

osslsigncode_verify_extract_signature_checksum() {
local "osslsigncode_signature_line"
osslsigncode_signature_line=$( osslsigncode_verify_extract_signature_checksum_line "${1}" )
osslsigncode_signature_type=$( echo "${osslsigncode_signature_line%%"${t}"*}" | awk '{print toupper($0)}' )
osslsigncode_signature_hash="${osslsigncode_signature_line##*"${t}"}"
osslsigncode_algo_openssl="${osslsigncode_signature_line%%"${t}"*}"
echo "Message digest algorithm  : ${osslsigncode_signature_type}" "Current message digest    : ${osslsigncode_signature_hash}"
}

osslsigncode_verify_signature_checksum() {
local "line"
if openssl dgst -"${osslsigncode_algo_openssl}" -- /dev/null >/dev/null 2>&1; then
	line=$( { head -c 344 -- "${1}"; tail -c +349 -- "${1}" | head -c 60; tail -c +417 -- "${1}" | head -c -"${osslsigncode_signature_size}"; } | openssl dgst -"${osslsigncode_algo_openssl}" -- /dev/stdin )
	line=$( echo "${line##*"= "}" | awk '{print toupper($0)}' )
	case "${osslsigncode_signature_hash}" in
		"${line}")
			echo "Calculated message digest : ${line}" "" "Signature verification: ok" ""
			osslsigncode_verify_signature_checksum_state="ok"
		;;
		*)
			echo "Calculated message digest : ${line} !MISMATCH" "" "Signature verification: failed" ""
			osslsigncode_verify_signature_checksum_state="failed"
			return 1
		;;
	esac
else
	osslsigncode_echoerr "Can not calculate ${osslsigncode_signature_type} message digest algorithm:" "${1}"
	return 1
fi
}

osslsigncode_verify_show_signature_sed() {
sed 's/^Subject: //; s/^Issuer: //; s/, C=/\/C=/g; s/, L=/\/L=/g; s/, O=/\/O=/g; s/, O=/\/O=/g; s/, CN=/\/CN=/g; s/, OU=/\/OU=/g'
}

osslsigncode_verify_show_signature_list() {
local "line" "serial_line_found" "first_line" "cert_num"
first_line=1
cert_num=0
echo "${1}" | openssl pkcs7 -inform PEM -print_certs -text -in /dev/stdin 2>/dev/null | while read -r "line"; do
	case "${serial_line_found:-"0"}" in
		1)
			case "${line}" in
				??:??:??:??:??:??:??:??:??:??:??:??:??:??:??:??)
					line=$( echo "${line}" | sed 's/://g' )
					serial_line=$( echo "${line}" | awk '{print toupper($0)}' )
				;;
			esac
			serial_line_found=0
		;;
	esac
	case "${line}" in
		"Subject: "?*)
			case "${first_line:-"0"}" in
				0)
					echo "${t}------------------"
				;;
			esac
			line=$( echo "${line}" | osslsigncode_verify_show_signature_sed )
			echo "${t}Cert #${cert_num:-"0"}:" "${t}${t}Subject: /${line:-""}" "${t}${t}Issuer : /${issuer_line}" "${t}${t}Serial : ${serial_line}"
			first_line=0
			cert_num=$(( cert_num + 1 ))
		;;
		"Issuer: "?*)
			issuer_line=$( echo "${line}" | osslsigncode_verify_show_signature_sed )
		;;
		"Serial Number:")
			serial_line_found=1
		;;
		*)
			continue
		;;
	esac
done
echo
}

osslsigncode_verify_show_signature() {
local "full_line" "full_num" "signer_line"
full_line=$( osslsigncode_verify_show_signature_list "${1}" )
full_num=$( echo "${full_line}" | grep -c -- "^${t}${t}Subject: " )
signer_line=$( echo "Number of signers: 1" "${t}Signer #0:"; echo "${full_line}" | grep -Em 1 -A 2 -- "/O=GOG Sp. z o.o./CN=GOG Sp. z o.o.|/O=GOG Limited/CN=GOG Limited" )
case "${signer_line:-""}" in
	"")
	;;
	*)
		echo "${signer_line}" ""
	;;
esac
full_num="${full_num:-"?"}"
echo "Number of certificates: ${full_num}" "${full_line}" ""
}

osslsigncode_verify() {
local "osslsigncode_checksum" "osslsigncode_signature_line" "osslsigncode_signature_type" "osslsigncode_signature_hash" "osslsigncode_signature" "osslsigncode_algo_openssl" "osslsigncode_verify_checksum_state" "osslsigncode_verify_signature_checksum_state"
if osslsigncode_extract_signature "${1}" "PEM"; then
	if osslsigncode_verify_signature "${1}" "${osslsigncode_signature}"; then
		if osslsigncode_verify_extract_checksum "${1}"; then
			osslsigncode_verify_checksum "${1}" "${osslsigncode_checksum}"
		else
			return 1
		fi
		if osslsigncode_verify_extract_signature_checksum "${osslsigncode_signature}"; then
			if ! osslsigncode_verify_signature_checksum "${1}"; then
				osslsigncode_code=1
			fi
			osslsigncode_verify_show_signature "${osslsigncode_signature}"
		else
			osslsigncode_code=1
			return 1
		fi
	else
		osslsigncode_echoerr "Corrupt PE file - certificates do not self-verify"
		osslsigncode_code=1
		return 1
	fi
else
	osslsigncode_echoerr "Failed to extract PKCS7 data" "${1}"
	osslsigncode_code=1
	return 1
fi
case "${osslsigncode_verify_checksum_state:-""},${osslsigncode_verify_signature_checksum_state:-""}" in
	"ok,ok")
		echo "Succeeded"
	;;
	*)
		echo "Failed"
		osslsigncode_code=1
		return 255
	;;
esac
}

osslsigncode() {
local "name" "r" "four_r" "osslsigncode_code"
name="osslsigncode"
n=$( printf -- '\n' )
t=$( printf -- '\t' )
r=$( printf -- '\r' )
four_r="${r}${r}${r}${r}"
case "${#}${r}${1:-""}${r}${2:-""}${r}${3:-""}${r}${4:-""}${r}${5:-""}" in
	"0${r}${four_r}")
		:
	;;
	"1${r}--version${four_r}"|"1${r}-v${four_r}"|"1${r}--v${four_r}")
		echo "${name:-"${0##*"/"}"} ${version:-"1.7.1"}, using:"\
		"${t}$( openssl version )"
		return 0
	;;
	"5${r}extract-signature${r}-in${r}${3:-""}${r}-out${r}${5:-""}")
		case "${3:-""}" in
			"")
				osslsigncode_show_help 1>&2
				return 255
			;;
		esac
		case "${5:-""}" in
			"")
				osslsigncode_show_help 1>&2
				return 255
			;;
			*)
				if [ -d "${3:-""}" ]; then
					osslsigncode_echoerr "Is a directory" "${3}" 1>&2
					return 255
				elif ! [ -e "${3:-""}" ]; then
					osslsigncode_echoerr "" "${3}" 1>&2
					return 255
				fi
				case "${5:-""}" in
					"/dev/stdout"|"/dev/stderr"|"/dev/null")
						:
					;;
					*)
						if [ -e "${5:-""}" ]; then
							osslsigncode_echoerr "Is a file or directory" "${5}" 1>&2
							return 255
						fi
					;;
				esac
			;;
		esac
		osslsigncode_extract "${3:-"/dev/null"}" > "${5:-"/dev/null"}"
	;;
	"3${r}verify${r}-in${r}${3:-""}${r}${r}")
		case "${3:-""}" in
			"")
				osslsigncode_show_help 1>&2
				return 255
			;;
		esac
		case "${3:-""}" in
			"")
				osslsigncode_show_help 1>&2
				return 255
			;;
			*)
				if [ -d "${3:-""}" ]; then
					osslsigncode_echoerr "Is a directory" "${3}" 1>&2
					return 255
				elif ! [ -e "${3:-""}" ]; then
					osslsigncode_echoerr "Failed to open file" "${3}" 1>&2
					return 255
				fi
			;;
		esac
		osslsigncode_verify "${3:-"/dev/null"}"
	;;
	"1${r}-h${four_r}"|"1${r}--h${four_r}"|"1${r}--help${four_r}")
		osslsigncode_show_help
		return 0
	;;
	*)
		osslsigncode_show_help 1>&2
		return 255
	;;
esac
return "${osslsigncode_code:-"0"}"
}

fixstamp() {


	exe_stamp_cut() {
	local "num" "line"
	num=0
	while read -r "line"; do
		case "${line}" in
			*[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]"Z^X^"*[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]"Z0"*)
				echo "${line%%"Z^X^"*}Z0"
				break
			;;
			*[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]"Z0"*)
				echo "${line}"
				break
			;;
		esac
		num=$(( num + 1 ))
		case "${num}" in
			128)
				break
			;;
		esac
	done
	}
	
	exe_stamp() {
	local "stamp" "funccode"
	case "${time_exceptions}" in
		*"  ${1##*"/"}"*)
			stamp=$( echo "${time_exceptions}" | grep -m 1 -- "  ${1##*"/"}$" )
			stamp="${stamp%%" "*}"
		;;
		*)
			stamp=$( tac "${1}" | cat -e | exe_stamp_cut | sed -nE 's/.*([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})Z0.*/20\1-\2-\3T\4:\5:\6+00:00$/p' )
			stamp="${stamp%%'$'*}"
		;;
	esac
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${1}: ${stmp_msn}"
			stamp=""
		;;
		*)
			stamp=$( date -d "${stamp}" -- '+%Y%m%d%H%M.%S' )
		;;
	esac
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			return 1
		;;
	esac
	if ! touch -cmt "${stamp}" -- "${1}" 2>/dev/null; then
		echover "${bold_timestamp}: ${stmp_msf}"
		funccode=1
	fi
	if [ -s "${1%".exe"}-1.bin" ]; then
		for bin in "${1%".exe"}-"*".bin"; do
			if ! touch -cmt "${stamp}" -- "${bin}" 2>/dev/null; then
				echover "${bold_timestamp}: ${stmp_msf}"
				funccode=1
			fi
		done
	elif [ -s "${1%".exe"}.bin" ]; then
		if ! touch -cmt "${stamp}" -- "${1%".exe"}.bin" 2>/dev/null; then
			echover "${bold_timestamp}: ${stmp_msf}"
			funccode=1
		fi
	fi
	return "${funccode:-"0"}"
	}
	
	
	pdf_stamp() {
	local "stamp"
	stamp=$( tac "${1}" | cat -e | grep -Em 1 -- '<xmp:ModifyDate>|<xmp:MetadataDate>|<xmp:CreationDate>|xap:ModifyDate=' )
	stamp="${stamp%%'</xmp:ModifyDate>'*}"
	stamp="${stamp##*'<xmp:ModifyDate>'}"
	stamp="${stamp%%'</xmp:MetadataDate>'*}"
	stamp="${stamp##*'<xmp:MetadataDate>'}"
	stamp="${stamp%%'</xmp:CreationDate>'*}"
	stamp="${stamp##*'<xmp:CreationDate>'}"
	stamp="${stamp##*"xap:ModifyDate='"}"
	stamp="${stamp%%"' xap:"*}"
	stamp="${stamp%%"'>"*}"
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			stamp=""
		;;
		*"Z")
			stamp=$( date -d "${stamp%%"Z"}+00:00" -- '+%Y%m%d%H%M.%S' )
		;;
		*)
			stamp=$( date -d "${stamp}" -- '+%Y%m%d%H%M.%S' )
		;;
	esac
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			return 1
		;;
	esac
	if ! touch -cmt "${stamp}" -- "${1}" 2>/dev/null; then
		echover "${bold_timestamp}: ${stmp_msf}"
	fi
	}
	
	seven_zip_date() {
	local "num" "line"
	num=0
	while read -r "line"; do
		case "${num}" in
			2)
				echo "${line}" | sed 's/ //; s/ .*//; s/-//g; s/://; s/:/./'
				break
			;;
		esac
		case "${line}" in
			"-------------------"*)
				num=$(( num + 1 ))
			;;
		esac
	done
	}
	
	seven_zip_stamp() {
	local "stamp"
	if ! type 7z >/dev/null 2>&1; then
		return 0
	fi	
	stamp=$( 7z l -- "${1}" | seven_zip_date )
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			return 1
		;;
	esac
	if ! touch -cmt "${stamp}" -- "${1}" 2>/dev/null; then
		echover "${bold_timestamp}: ${stmp_msf}"
	fi
	}
	
	tar_stamp_head() {
	local "line"
	while read -r "line"; do
		echo "${line}"
		break
	done
	}
	
	tar_stamp() {
	local "stamp"
	stamp=$( tar --list --verbose --full-time -f "${1}" )
	case "${stamp:-""}" in
		"")
			return 1
		;;
	esac
	stamp=$( echo "${stamp}" | sed -nE 's/.*[0-9] ([0-9]{4})-([0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}) .*/\1\2\3\4\5.\6/p' )
	stamp=$( echo "${stamp}" | sort -rn | tar_stamp_head )
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			return 1
		;;
	esac
	if ! touch -cmt "${stamp}" -- "${1}" 2>/dev/null; then
		echover "${bold_timestamp}: ${stmp_msf}"
	fi
	}
	
	deb_stamp() {
	local "stamp"
	stamp=$( 7z l -- "${1}" | grep -m 1 -- "^Modified = " )
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			return 1
		;;
	esac
	stamp=$( echo "${stamp}" | sed -nE 's/Modified = ([0-9]{4})-([0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2})/\1\2\3\4\5.\6/p' )
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			return 1
		;;
	esac
	if ! touch -cmt "${stamp}" -- "${1}" 2>/dev/null; then
		echover "${bold_timestamp}: ${stmp_msf}"
	fi
	}
	
	br_stamp() {
	local "stamp"
	if ! type "brotli" >/dev/null 2>&1; then
		return 0
	fi
	stamp=$( tar --use-compress-program="brotli" --list --verbose --full-time -f "${1}" )
	case "${stamp:-""}" in
		"")
			return 1
		;;
	esac
	stamp=$( echo "${stamp}" | sed -nE 's/.*[0-9] ([0-9]{4})-([0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}) .*/\1\2\3\4\5.\6/p' )
	stamp=$( echo "${stamp}" | sort -rn | tar_stamp_head )
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			return 1
		;;
	esac
	if ! touch -cmt "${stamp}" -- "${1}" 2>/dev/null; then
		echover "${bold_timestamp}: ${stmp_msf}"
	fi
	}
	
	zst_stamp() {
	local "stamp"
	if ! type "zstd" >/dev/null 2>&1; then
		return 0
	fi
	stamp=$( tar --list --verbose --full-time -f "${1}" )
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			return 1
		;;
	esac
	stamp=$( echo "${stamp}" | sed -nE 's/.*[0-9] ([0-9]{4})-([0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}) .*/\1\2\3\4\5.\6/p' )
	stamp=$( echo "${stamp}" | sort -rn | tar_stamp_head )
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			return 1
		;;
	esac
	if ! touch -cmt "${stamp}" -- "${1}" 2>/dev/null; then
		echover "${bold_timestamp}: ${stmp_msf}"
	fi
	}

	image_stamp() {
	local "stamp"
	if ! type "identify" >/dev/null 2>&1; then
		return 0
	fi
	stamp=$( identify -verbose -- "${1}" | grep -m 1 -- '^    exif:DateTime: ' )
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			return 1
		;;
	esac
	stamp=$( echo "${stamp}" | sed -nE 's/    exif:DateTime: ([0-9]{4}):([0-9]{2}):([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2})/\1\2\3\4\5.\6/p' )
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			return 1
		;;
	esac
	if ! touch -cmt "${stamp}" -- "${1}" 2>/dev/null; then
		echover "${bold_timestamp}: ${stmp_msf}"
	fi
	}

	video_stamp() {
	local "stamp"
	if ! type "ffmpeg" >/dev/null 2>&1; then
		return 0
	fi
	stamp=$( ffmpeg -i "${1}" -f null - 2>/dev/stdout | grep -m 1 -- '^    creation_time   : ' )
	case "${stamp:-""}" in
		"")
			echover "${bold_timestamp}: ${stmp_msn}"
			return 1
		;;
	esac
	stamp=$( echo "${stamp}" | sed 's/    creation_time   : //' )
	stamp=$( date -d "${stamp}" -- '+%Y%m%d%H%M.%S' )
	case "${stamp:-""}" in
		"")
			return 1
		;;
	esac
	if ! touch -cmt "${stamp}" -- "${1}" 2>/dev/null; then
		echover "${bold_timestamp}: ${stmp_msf}"
	fi
	}
	
	multi_stamp() {
	bold_timestamp="${bold:-""}timestamp${reset:-""}"
	case "${1##*"/"}" in
		*.[eE][xX][eE])
			if ! exe_stamp "${1}"; then
				return 1
			fi
		;;
		*.[pP][dD][fF])
			if ! pdf_stamp "${1}"; then
				return 1
			fi
		;;
		*.[tT][aA][rR]|*.[tT][gG][zZ]|*.[tT][aA][rR].[gG][zZ]|*.[tT][bB][zZ]|*.[tT][aA][rR].[bB][zZ]|*.[tT][bB][zZ]2|*.[tT][aA][rR].[bB][zZ]2|*.[tT][xX][zZ]|*.[tT][aA][rR].[xX][zZ])
			if ! tar_stamp "${1}"; then
				return 1
			fi
		;;
		*.[aA][pP][kK]|*.7[zZ]|*.[iI][sS][oO]|*.[jJ][aA][rR]|*.[rR][aA][rR]|*.[zZ][iI][pP])
			if ! seven_zip_stamp "${1}"; then
				return 1
			fi
		;;
		*.[dD][eE][bB])
			if ! deb_stamp "${1}"; then
				return 1
			fi
		;;
		*.[tT][aA][rR].[bB][rR]|*.[tT][bB][rR])
			if ! br_stamp "${1}"; then
				return 1
			fi
		;;
		*.[tT][aA][rR].[zZ][sS][tT]|*.[tT][aA][rR].[zZ][sS][tT][dD]|*.[tT][zZ][sS][tT]|*.[tT][zZ][sS][tT][dD])
			if ! zst_stamp "${1}"; then
				return 1
			fi
		;;
		*.[pP][nN][gG]|*.[jJ][pP][gG])
			if ! image_stamp "${1}"; then
				return 1
			fi
		;;
		*.[aA][vV][iI]|*.[mM][kK][vV]|*.[mM][pP]4)
			if ! video_stamp "${1}"; then
				return 1
			fi
		;;
		*)
			return 0
		;;
	esac
	}
	
	local "code" "item" "stmp_msn" "stmp_mso" "stmp_msf"
	if ! type date touch >/dev/null 2>&1; then
		return 0
	fi	
	case "${dry_run:-"0"}" in
		1)
			return 0
		;;
	esac
	case "${timestamp:-"0"}" in
		0)
			return 0
		;;
	esac
	stmp_msn="Finding the date ${red:-""}FAILED${reset:-""}"
	stmp_msf="Setting the date has ${red:-""}FAILED${reset:-""}"
	for item in "${@}"; do
		if ! [ -s "${item}" ]; then
			continue
		fi
		if ! multi_stamp "${item}"; then
			code=1
		fi
	done	
	return "${code:-"0"}"

}

process_local_checksums_check() {
local "hash"
hash=$(
	if ! grep -m 1 -- "^SHA512 (${dat}) = " "${sum}" 2>/dev/null; then
		grep -m 1 -E -- "  .*${dat}$| *.*${dat}$" "${sum}" 2>/dev/null
	fi
)
case "${hash:-""}" in
	"")
		return 0
	;;
	*[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]"  ${dat}")
		hash="${hash%%"  "*}  ${dir}/${dat}"
	;;
	*[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]" *${dat}")
		hash="${hash%%" *"*}  ${dir}/${dat}"
	;;
	"SHA512 (${dat}) = "[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]*)
		hash="${hash##*"SHA512 (${dat}) = "}  ${dir}/${dat}"
	;;
	"SHA256 (${dat}) = "[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]*)
		sum="${sum%"/"*}/SHA256SUM"
		hash="${hash##*"SHA256 (${dat}) = "}  ${dir}/${dat}"
	;;
	"SHA1 (${dat}) = "[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]*)
		sum="${sum%"/"*}/SHA1SUM"
		hash="${hash##*"SHA1 (${dat}) = "}  ${dir}/${dat}"
	;;
	"MD5 (${dat}) = "[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f]*)
		sum="${sum%"/"*}/MD5SUM"
		hash="${hash##*"MD5 (${dat}) = "}  ${dir}/${dat}"
	;;
	*)
		return 0
	;;
esac
case "${sum}" in
	*/MD5SUM)
		if echo "${hash}" | md5sum -c >/dev/null 2>&1; then
			echo_colour "${dat}: ${green_ok}"
		else
			echo_colour "${dat}: ${red_failed}"
			return 1
		fi
	;;
	*/SHA1SUM)
		if echo "${hash}" | sha1sum -c >/dev/null 2>&1; then
			echo_colour "${dat}: ${green_ok}"
		else
			echo_colour "${dat}: ${red_failed}"
			return 1
		fi
	;;
	*/SHA256SUM)
		if echo "${hash}" | sha256sum -c >/dev/null 2>&1; then
			echo_colour "${dat}: ${green_ok}"
		else
			echo_colour "${dat}: ${red_failed}"
			return 1
		fi
	;;				
	*/SHA512SUM|*/TRIOSUM)
		if echo "${hash}" | sha512sum -c >/dev/null 2>&1; then
			echo_colour "${dat}: ${green_ok}"
		else
			echo_colour "${dat}: ${red_failed}"
			return 1
		fi
	;;
	*/QUADSUM)
		case "${recovery:-"0"}" in
			0)
				if type quadsum; then
					if quadsum -cs -- "${sum}" >/dev/null 2>&1; then
						echo_colour "${dat}: ${green_ok}"
					else
						echo_colour "${dat}: ${red_failed}"
						return 1
					fi
				else
					if echo "${hash}" | sha512sum -c >/dev/null 2>&1; then
						echo_colour "${dat}: ${green_ok}"
					else
						echo_colour "${dat}: ${red_failed}"
						return 1
					fi
				fi
			;;
		esac
	;;
esac >/dev/null 2>&1
}

process_local_checksums() {
local "dat" "dir" "sum"
case "${no_local:-"0"}" in
	1)
		return 0
	;;
esac
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if type attr >/dev/null 2>&1; then
	case "${is_xattrs:-"0"}" in
		1)		
			if getfattr -- "${1}" >/dev/null 2>&1; then
				return 0
			fi
		;;
	esac
fi
dat="${1##*"/"}"
case "${1}" in
	*/*)
		dir="${1%"/"*}"
	;;
	*)
		dir="${PWD}"
	;;
esac
if [ -d "${dir}" ]; then
	for sum in QUADSUM TRIOSUM SHA512SUM SHA256SUM SHA1SUM MD5SUM; do
		sum="${dir}/${sum}"
		if [ -s "${sum}" ]; then
			if process_local_checksums_check; then
				break
			else
				echo_colour "${1}: ${red_failed}"
				code=1
				return 1
			fi
		else
			continue
		fi
	done
else
	return 1
fi
}
process_exe_warn_miss_judge() {
case "${is_gog:-"1"}" in
	0)
		return 0
	;;
esac
case "${ignore_missing:-"0"}" in
	1)
		return 0
	;;
esac
case "${total:-""}" in
	"")
		return 1
	;;
	"-"*|0)
		return 0
	;;
	1)
		echoerr "${bold_name}: ${1}: ${blink:-""}Is missing 1 BIN${reset:-""}" 1>&2
		return 1
	;;
	*)
		echoerr "${bold_name}: ${1}: ${blink:-""}Is missing ${total} BINs${reset:-""}" 1>&2
		return 1
	;;
esac
}

process_exe_warn_miss() {
local "base" "exe" "base" "old" "now" "total"
case "${is_gog:-"1"}" in
	0)
		return 0
	;;
esac
case "${ignore_missing:-"0"}" in
	1)
		return 0
	;;
esac
base="${1##*"/"}"
base="${base%"."*}"
exe="${1}"
exe=$( dirname -- "${exe}" )
now=$( find "${exe}" -maxdepth 1 -iname "${base}*.bin" 2>/dev/null | wc -l 2>/dev/null )
old=$( tac -- "${1}" 2>/dev/null | cat -e 2>/dev/null | grep -m 1 -- "[0-9][0-9]#GOGCRCSTRING" 2>/dev/null )
case "${old:-""}" in
	"")
		return 0
	;;
esac
unset "exe"
old="${old%"#GOGCRCSTRING"*}"
num="${#old}"
num=$(( num - 2 ))
old=$( necho "${old}" | sed -r "s/.{${num:-"#"}}(..$)/\1/; s/^0//" )
unset "num"
total=$(( old - now ))
unset "old" "now"
if process_exe_warn_miss_judge "${1}"; then
	return 0
else
	return 1
fi
}

process_exe_exceptions() {
local "exception" "base" "exe" "old" "now"
unset "sha_one"
case "${no_excl:-"0"}" in
	1)
		return 1
	;;
esac
exception=$( echo "${exe_exceptions}" | grep -m 1 -- "  ${1##*"/"}$" )
case "${exception:-""}" in
	"")
		return 1
	;;
	*)
		sha_one="${exception}"
		case "${ignore_missing:-"0"}" in
			0)
				base="${1##*"/"}"
				base="${base%"."*}"				
				exe="${1}"
				exe=$( dirname -- "${exe}" )
				old=$( echo "${bin_exceptions}" | grep -c -- "  ${1%%".exe"}-" )
				now=$( find "${exe}" -maxdepth 1 -iname "${base}*.bin" 2>/dev/null | wc -l 2>/dev/null )
				total=$(( old - now ))
				total="${total:-"0"}"
			;;
		esac
		return 0
	;;
esac
}

process_exe_state() {
local "line" "start"
strict_full=""
while read -r "line"; do
	case "${line}" in
		"Current PE checksum"*)
			pe_old="${line##*": "}"
		;;
		"Calculated PE checksum"*)
			pe_new="${line##*": "}"
		;;
		"Current message digest"*)
			old="${line##*": "}"
		;;
		"Calculated message digest"*)
			new="${line##*": "}"
		;;
		"Signature verification:"*)
			as="${line##*": "}"
		;;
		"No signature found.")
			echoerr "${bold_name}: ${1}: ${blink:-""}No signature found${reset:-""}"
			return 1
		;;
	esac
done
case "${pe_old:-"old"}_${old:-"old"}_${as:-"none"}_${to:-"none"}" in
	"${pe_new:-"new"}_${new:-"new"}"_ok_ok)
		return 0
	;;
	*)
		return 1
	;;
esac
}

process_exe() {
local "sha_one" "total"
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
if osslsigncode extract-signature -in "${1}" -out /dev/null >/dev/null 2>&1; then
	case "${dry_run:-"0"}" in
		1)
			return 0
		;;
	esac
	case "${fingerprint:-"0"}" in
		0)
			if osslsigncode verify -in "${1}" >/dev/null 2>&1; then
				process_recovery_make "${1}"
				process_xattr_make "${1}"
				fixstamp "${1}"
				if process_exe_warn_miss "${1}"; then
					echo_colour "${1}: ${green_ok}"
				else
					echo_colour "${1}: ${red_failed}"
					code=1
				fi
			else
				echo_colour "${1}: ${red_failed}"
				code=1
			fi
		;;
		*)
			local "osslsigncode_checksum" "osslsigncode_signature_line" "osslsigncode_signature_type" "osslsigncode_signature_hash" "osslsigncode_signature" "osslsigncode_algo_openssl" "osslsigncode_verify_checksum_state" "osslsigncode_verify_signature_checksum_state"
			if osslsigncode_extract_signature "${1}" "PEM"; then
				osslsigncode_verify_signature "${1}" "${osslsigncode_signature}"
			fi
		;;
	esac
else
	if process_exe_exceptions "${1}"; then
		case "${dry_run:-"0"}" in
			1)
				return 0
			;;
		esac
		if ! process_exe_warn_miss_judge "${1}"; then
			echo_colour "${1}: ${red_failed}"
			return 1
		fi
		if echo "${sha_one%%"  "*}  ${1}" | sha1sum -c >/dev/null 2>&1; then
			echo_colour "${1}: ${green_ok}"
			process_recovery_make "${1}"
			process_xattr_make "${1}"
			fixstamp "${1}"
		else
			echo_colour "${1}: ${red_failed}"
			code=1
		fi
	else
		echoerr "${bold_name}: ${1}: ${blink:-""}No signature found${reset:-""}"
		case "${dry_run:-"0"}" in
			0)
				echo_colour "${1}: ${red_failed}"
			;;
		esac
		return 1
	fi
fi
}

process_bin_exceptions() {
local  "exception"
unset "md_five"
case "${no_excl:-"0"}" in
	1)
		return 1
	;;
esac
exception=$( echo "${bin_exceptions}" | grep -m 1 -- "  ${1##*"/"}$" )
case "${exception:-""}" in
	"")
		return 1
	;;
	*)
		md_five="${exception}"
		return 0
	;;
esac
}

process_bin_extract() {
local "n_orig" "line"
case "${n}" in
	01|02|03|04|05|06|07|08|09|00)
		n=$( necho "${n}" | sed -r "s/^0//" )
	;;
esac
n_orig="${n}"
b=$(( n * 32 ))
n=$(( t - b ))
t=$( necho "${1}" | sed -r "s/.*(.{${b}})..$/\1/" )
n=0
while true; do
	n=$(( n + 1 ))
	case "${#t}" in
		0|1|2)
			break
		;;
	esac
	if [ "${n}" -gt "${n_orig}" ]; then
		break
	fi
	case "${solo:-"0"}" in
		0)
			line=$( necho "${t}" | sed -r "s/^(.{32}).*/\1/" )
			echo "${line}  ${exe%".exe"}-${n}.bin"
			unset "line"
		;;
		1)
			line=$( necho "${t}" | sed -r "s/^(.{32}).*/\1/" )
			echo "${line}  ${exe%".exe"}.bin"
			unset "line"
			break
		;;
	esac
	t=$( necho "${t}" | sed -r "s/.{32}(.*)/\1/" )
done
}

process_bin() {
local "exe" "solo" "old_exe" "md5" "num_bin" "t" "n" "mn" "md_five" "find_bins"
case "${is_gog:-"1"}" in
	0)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
case "${1}" in
	*"-"[0-9][0-9].[bB][iI][nN]|*"-"[0-9].[bB][iI][nN])
		exe="${1%"-"*}.exe"
	;;
	*)
		exe="${1%"."*}.exe"
		solo=1
	;;
esac
if [ -s "${exe}" ]; then
	case "${strict:-"0"}" in
		1)
			case "${exe}" in
				"${process_bin_last_exe:-""}")
					:
				;;
				*)
					if ! process_exe "${exe}" >/dev/null; then
						echo_colour "${1}: ${red_failed}"
						code=1
						return 1
					fi
					process_bin_last_exe="${exe}"
				;;
			esac
		;;
	esac
else
	echoerr "${bold_name}: ${1}: ${blink:-""}No EXE found${reset:-""}"
	echo_colour "${1}: ${red_failed}"
	code=1
	return 1
fi
find_bins="${exe%".exe"}"
find_bins="${find_bins##*"/"}"
if process_bin_exceptions "${1}"; then	
	case "${dry_run:-"0"}" in
		1)
			return 0
		;;
	esac
	if echo "${md_five%%"  "*}  ${1}" | md5sum -c >/dev/null 2>&1; then
		echo_colour "${1}: ${green_ok}"
		process_recovery_make "${1}"
		process_xattr_make "${1}"
		fixstamp "${1}"
		return 0
	else
		echo_colour "${1}: ${red_failed}"
		code=1
		return 1
	fi
	case "${ignore_missing:-"0"}" in
		1)
			return 0
		;;
	esac
	num_bin=$( find "$( dirname -- "${exe}" )" -maxdepth 1 -iname "${find_bins}*.bin" 2>/dev/null | wc -l 2>/dev/null )
	n=$( echo "${bin_exceptions}" | grep -c -- "  ${exe%".exe"}" )
	mn=$(( n - num_bin ))
	case "${mn}" in
		"-"*|0)
			return 0
		;;
		1)
			echoerr "${bold_name}: ${1}: ${blink:-""}Is missing 1 BIN${reset:-""}" 1>&2
			return 1
		;;
		*)
			echoerr "${bold_name}: ${1}: ${blink:-""}Is missing ${mn} BINs${reset:-""}" 1>&2
			return 1
		;;
	esac
fi
case "${old_exe:-""}" in
	"${exe}")
		:
	;;
	*)
		md_five=$( tac -- "${exe}" 2>/dev/null | cat -e 2>/dev/null | grep -m 1 -- "[0-9][0-9]#GOGCRCSTRING" 2>/dev/null )
		md_five="${md_five%"#GOGCRCSTRING"*}"
		md_five=$( echo "${md_five}" | awk '{print tolower($0)}' )
		t="${#md_five}"
		t=$(( t - 2 ))
		num_bin=$( find "$( dirname -- "${exe}" )" -maxdepth 1 -iname "${find_bins}*.bin" 2>/dev/null | wc -l 2>/dev/null )
		case "${num_bin:-""}" in
			"")
				num_bin="00"
			;;
			1|2|3|4|5|6|7|8|9)
				num_bin="0${num_bin}"
			;;
		esac
		case "${md_five}" in
			"")
				echoerr "${bold_name}: ${1}: ${blink:-""}No checksum found${reset:-""}"
				case "${dry_run:-"0"}" in
					0)
						echo_colour "${1}: ${red_failed}"
						return 1
					;;
				esac
				unset "md5" "old_exe"
			;;
			00)
				return 0
			;;
			*)
				n=$( necho "${md_five}" | sed -r "s/.{${t}}(..$)/\1/" )
				md_five=$( process_bin_extract "${md_five}" )
			;;
		esac
		case "${n}" in
			"${num_bin}"|0|00)
				:
			;;
			*)
				case "${ignore_missing:-"0"}" in
					0)
						case "${n}" in
							01|02|03|04|05|06|07|08|09|00)
							n=$( necho "${n}" | sed -r "s/^0//" )
							;;
						esac
						case "${num_bin}" in
							01|02|03|04|05|06|07|08|09|00)
								num_bin=$( necho "${num_bin}" | sed -r "s/^0//" )
							;;
						esac
						mn=$(( n - num_bin ))
						case "${mn}" in
							"-"*|0)
								:
							;;
							1)
								echoerr "${bold_name}: ${1}: ${blink:-""}Is missing 1 BIN${reset:-""}" 1>&2
								return 1
							;;
							*)
								echoerr "${bold_name}: ${1}: ${blink:-""}Is missing ${mn} BINs${reset:-""}" 1>&2
								return 1
							;;
						esac
					;;
				esac
			;;
		esac
		old_exe="${exe}"
	;;
esac
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
case "${md_five:-""}" in
	"")
		echo_colour "${1}: ${red_failed}"
		code=1
	;;
	*)
		to_check=$( echo "${md_five}" | grep -m 1 -- "${1##*"/"}" )
		if echo "${to_check%%"  "*}  ${1}" | md5sum -c >/dev/null 2>&1; then
			echo_colour "${1}: ${green_ok}"
			process_recovery_make "${1}"
			process_xattr_make "${1}"
			fixstamp "${1}"
		else
			echo_colour "${1}: ${red_failed}"
			code=1
		fi
	;;
esac
}

process_recovery_make_failed() {
echo "${1:-"parchive: ${item}: FAILED"}" 1>&2
if rm -f -- "${dir}/par/"*."par2" "${dir}/QUADSUM"; then
	rmdir -- "${dir}/par/"
fi
code=1
}

process_recovery_make() {
local "dir" "item" "full" "par" "hash" "hash_par_old" "hash_par_new" "hash_par_tmp_one" "hash_par_tmp_two"
bold_mkpar="${bold:-""}mkpar${reset:-""}"
bold_quadsum="${bold:-""}quadsum${reset:-""}"
case "${recovery:-"0"}" in
	0)
		return 0
	;;
esac
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! [ -s "${1}" ]; then
	return 0
fi
if type mkpar quadsum >/dev/null 2>&1; then
	full=$( realpath --no-symlinks -- "${1}" )
	dir="${full%"/"*}"
	item="${full##*"/"}"
	par="${dir}/par/${item}"
	if ! [ -d "${dir}" ]; then
		return 1
	fi
	if [ -s "${par}.par2" ]; then
		if ! mkpar -s -- "${par}.par2" 2>/dev/null; then
			echo "${bold_mkpar}: ${item}: Par2 verification ${red_failed}" 1>&2
			code=1
			return 1
		fi
		if quadsum -cs -- "${dir}/QUADSUM.sig" 2>/dev/null; then
			return 0
		else
			echo "${bold_quadsum}: ${item}: Secure verification ${red_failed}" 1>&2
			code=1
			return 1
		fi
	fi
	if grep -m 1 -- " (${item}) = " "${dir}/QUADSUM" 2>/dev/null; then
		return 0
	fi
	if quadsum --no-dir -- "${full}" >> "${dir}/QUADSUM" 2>/dev/null; then
		if mkpar -xs -- "${full}" 2>/dev/null; then
			hash_par_old="$( getfattr -n "user.par2.blake2b" --only-values -- "${par}.par2" 2>/dev/null )"
			hash_par_old="${hash_par_old}$( getfattr -n "user.par2.blake2b" --only-values -- "${par}.vol0+1.par2" 2>/dev/null )"
			setfattr -x "user.par2.blake2b" -- "${par}.par2" "${par}.vol0+1.par2" &>/dev/null
		else
			if process_recovery_make_failed "mkpar: ${item}: Par2 creation ${red_failed}"; then return 1; fi
		fi
		if ! quadsum --no-dir -- "${par}.par2" "${par}.vol0+1.par2" >> "${dir}/QUADSUM" 2>/dev/null; then
			if process_recovery_make_failed "${bold_quadsum}: ${item}: Par2 checksums ${red_failed}"; then return 1; fi
		fi
		hash_par_tmp_one=$( grep -m 1 -- "${par##*"/"}.par2" "${dir}/QUADSUM" 2>/dev/null )
		hash_par_tmp_two=$( grep -m 1 -- "${par##*"/"}.vol0+1.par2" "${dir}/QUADSUM" 2>/dev/null )
		hash_par_new="${hash_par_tmp_one##*" "}${hash_par_tmp_two##*" "}"
		unset "hash_par_tmp_one" "hash_par_tmp_two"
		case "${hash_par_old}" in
			"${hash_par_new}")
				unset "hash_par_old" "hash_par_new"
			;;
			*)
				if process_recovery_make_failed "${bold_mkpar}: ${item}: Par2 verification ${red_failed}"; then return 1; fi
			;;
		esac
		if [ -s "${dir}/QUADSUM.sig" ]; then
			hash_old=$( sha512sum -- "${dir}/QUADSUM" 2>/dev/null )
			hash_old="${hash_old%%" "*}"
			if quadsum -cs -- "${dir}/QUADSUM.sig" 2>/dev/null; then
				if ! rm -f -- "${dir}/QUADSUM.sig" 2>/dev/null; then
					if process_recovery_make_failed "${bold_quadsum}: ${item}: ${red_failed}"; then return 1; fi
				fi
				hash_new=$( sha512sum -- "${dir}/QUADSUM" 2>/dev/null )
				hash_new="${hash_old%%" "*}"
				if ! quadsum -sn -- "${dir}/QUADSUM" 2>/dev/null; then
					if process_recovery_make_failed "${bold_quadsum}: ${item}: Secure signing ${red_failed}"; then return 1; fi
				fi
				case "${hash_old}" in
					"${hash_new}")
						return 0
					;;
					*)
						if process_recovery_make_failed "${bold_quadsum}: ${item}: Secure signing ${red_failed}"; then return 1; fi
					;;
				esac
			else
				if ! rm -f -- "${dir}/QUADSUM.sig" 2>/dev/null; then
					echo "${bold_quadsum}: ${item}: FAILED" 1>&2
					code=1
					return 1
				fi
			fi
		else
			if ! quadsum -sn -- "${dir}/QUADSUM" 2>/dev/null; then
				if process_recovery_make_failed "${bold_quadsum}: ${item}: Secure signing ${red_failed}"; then return 1; fi
			fi
		fi
	else
		if process_recovery_make_failed "${bold_quadsum}: ${item%%*"/"}: Data checksums ${red_failed}"; then return 1; fi
	fi
fi >/dev/null 
}

process_xattr_make() {
local "date"
case "${is_xattrs:-"0"}" in
	0)
		return 0
	;;
esac
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if type b2sum >/dev/null 2>&1; then
	case "${make:-"0"}" in
		1)
			case "${#hash}" in
				128)
					if setfattr -n "${hash_mark}" -v "${hash}" -- "${1}" 2>/dev/null; then
						echover "${bold_xattrs}: ${1}: Creation ${green_ok}" 1>&2
					else
						echover "${bold_xattrs}: ${1}: Creation has ${red_failed}" 1>&2
						setfattr -x "${hash_mark}" -- "${1}" 2>/dev/null
						code=1
						return 1
					fi
				;;
			esac
		;;
	esac
fi
}

process_xattr_check() {
local "hash_old"
case "${is_xattrs:-"0"}" in
	0)
		return 0
	;;
esac
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if type b2sum >/dev/null 2>&1; then
	hash_old=$( getfattr --only-values -n "${hash_mark}" -- "${1}" )
	case "${hash_old:-""}" in
		"")
			echo_colour "${1}: ${red_failed}"
			code=1
			return 1
		;;
		"${hash}")
			case "${fingerprint:-"0"}" in
				0)
					echo_colour "${1}: ${green_ok}"
				;;
			esac
			return 0
		;;
		*)
			echo_colour "${1}: ${red_failed}"
			code=1
			return 1
		;;
	esac
fi
}

process_xattr() {
local "date_now" "date_old"
case "${is_xattrs:-"0"}" in
	0)
		return 1
	;;
esac
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if type attr >/dev/null 2>&1; then
	if getfattr -- "${1}" >/dev/null 2>&1; then
		hash=$( b2sum -- "${1}" )
		hash="${hash%%"  "*}"
		if getfattr --only-values -n "${hash_mark}" -- "${1}" >/dev/null 2>&1; then
			return 0
		else
			setfattr -x "${hash_mark}" -- "${1}" 2>/dev/null
			make=1
			return 1
		fi
	else
		return 1
	fi
else
	return 1
fi
}

process_seven_zip() {
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
if type 7z >/dev/null 2>&1; then
	if 7z t -- "${1}" >/dev/null 2>&1; then
		process_recovery_make "${1}"
		process_xattr_make "${1}"
		fixstamp "${1}"
		case "${fingerprint:-"0"}" in
			0)
				echo_colour "${1}: ${green_ok}"
			;;
		esac
	else
		echo_colour "${1}: ${red_failed}"
		code=1
	fi
else
	process_recovery_make "${1}"
	process_xattr_make "${1}"
	fixstamp "${1}"
fi
}

process_br() {
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
if type brotli >/dev/null 2>&1; then
	if brotli -t -- "${1}" >/dev/null 2>&1; then
		process_recovery_make "${1}"
		process_xattr_make "${1}"
		fixstamp "${1}"
		case "${fingerprint:-"0"}" in
			0)
				echo_colour "${1}: ${green_ok}"
			;;
		esac
	else
		echo_colour "${1}: ${red_failed}"
		code=1
	fi
else
	process_recovery_make "${1}"
	process_xattr_make "${1}"
	fixstamp "${1}"
fi
}

process_bz_two() {
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
if bzip2 -tf /dev/stdin < "${1}" >/dev/null 2>&1; then
	process_recovery_make "${1}"
	process_xattr_make "${1}"
	fixstamp "${1}"
	case "${fingerprint:-"0"}" in
		0)
			echo_colour "${1}: ${green_ok}"
		;;
	esac
else
	echo_colour "${1}: ${red_failed}"
	code=1
fi
}

process_tmp_clean() {
case "${dtmp:-""}" in
	"/tmp/${name}-"????????????)
		rm -fr -- "${dtmp}"
	;;
esac
unset "dtmp"
case "${1:-"0"}" in
	130)
		exit 130
	;;
esac
}

process_deb() {
local "dpath" "dtmp"
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
dpath=$( realpath --no-symlinks -- "${1}" )
dtmp=$( mktemp -p "/tmp/" -d "${name}-XXXXXXXXXXXX" 2>/dev/null )
if [ -d "${dtmp:-""}" ]; then
	trap 'process_tmp_clean 130' INT
else
	return 1
fi
if type ar >/dev/null 2>&1; then
	db_sum=$( cd -- "${dtmp}" 2>/dev/null && ln -s -- /dev/stdout debian-binary 2>/dev/null && ar x -- "${dpath}" debian-binary 2>/dev/null | md5sum )
	db_sum="${db_sum%%" "*}"
	case "${db_sum}" in
		3cf918272ffa5de195752d73f3da3e5e)
			:
		;;
		*)
			process_tmp_clean
			echo_colour "${1}: ${red_failed}"
			code=1
			return 1
		;;
	esac
else
	process_tmp_clean
	process_recovery_make "${1}"
	process_xattr_make "${1}"
	fixstamp "${1}"
	return 0
fi
if ! ( cd -- "${dtmp}" 2>/dev/null && mv -- debian-binary control.tar.xz 2>/dev/null && ar x -- "${dpath}" control.tar.xz 2>/dev/null | xz -dcf /dev/stdin >/dev/null 2>&1 ); then
	process_tmp_clean
	echo_colour "${1}: ${red_failed}"
	code=1
	return 1
fi
if ( cd -- "${dtmp}" 2>/dev/null && mv -- control.tar.xz data.tar.xz 2>/dev/null && ar x -- "${dpath}" data.tar.xz 2>/dev/null | xz -dcf /dev/stdin >/dev/null 2>&1 ); then
	process_tmp_clean
	process_recovery_make "${1}"
	process_xattr_make "${1}"
	fixstamp "${1}"
	case "${fingerprint:-"0"}" in
		0)
			echo_colour "${1}: ${green_ok}"
		;;
	esac
else
	process_tmp_clean
	echo_colour "${1}: ${red_failed}"
	code=1
fi
}

process_gz() {
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
if gzip -tf /dev/stdin < "${1}" >/dev/null 2>&1; then
	process_recovery_make "${1}"
	process_xattr_make "${1}"
	fixstamp "${1}"
	case "${fingerprint:-"0"}" in
		0)
			echo_colour "${1}: ${green_ok}"
		;;
	esac
else
	echo_colour "${1}: ${red_failed}"
	code=1
fi
}

process_xz() {
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
if xz -dcf /dev/stdin < "${1}" >/dev/null 2>&1; then
	process_recovery_make "${1}"
	process_xattr_make "${1}"
	fixstamp "${1}"
	case "${fingerprint:-"0"}" in
		0)
			echo_colour "${1}: ${green_ok}"
		;;
	esac
else
	echo_colour "${1}: ${red_failed}"
	code=1
	return 1
fi
}

process_media() {
local "video_check"
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
if type ffmpeg >/dev/null 2>&1; then
	video_check=$( ffmpeg -v 5 -i "${1}" -f null - 2>&1 )
	case "${video_check:-""}" in
		"")
			process_recovery_make "${1}"
			process_xattr_make "${1}"
			fixstamp "${1}"
			case "${fingerprint:-"0"}" in
				0)
					echo_colour "${1}: ${green_ok}"
				;;
			esac
		;;
		*)
			echo_colour "${1}: ${red_failed}"
			code=1
		;;
	esac
else
	process_recovery_make "${1}"
	process_xattr_make "${1}"
fi
}

process_pdf() {
local "line" "exe" "dir" "dpath"
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
case "${no_excl:-"0"}" in
	0)
		line=$( echo "${pdf_exceptions}" | grep -m 1 -- "  ${1##*"/"}$" 2>/dev/null )
		case "${line:-""}" in
			"")
				:
			;;
			*"  Manual.pdf")
				filesize=$( stat --printf="%s" -- "${1}" 2>/dev/null )
				case "${filesize:-"0"}" in
					1177352)
						:
					;;
					*)
						line=""
					;;
				esac
			;;
		esac
	;;
	1)
		line=""
	;;
esac	
case "${line:-""}" in
	"")
	if type gs >/dev/null 2>&1; then
		if gs -dNOPAUSE -dBATCH -sDEVICE=nullpage -- "${1}" >/dev/null 2>&1; then
			process_recovery_make "${1}"
			process_xattr_make "${1}"
			fixstamp "${1}"
			case "${fingerprint:-"0"}" in
				0)
					echo_colour "${1}: ${green_ok}"
				;;
			esac
		else
			echo_colour "${1}: ${red_failed}"
			code=1
		fi
	else
		process_recovery_make "${1}"
		process_xattr_make "${1}"
		fixstamp "${1}"
	fi
	;;
	*)
		if echo "${line}" | sha1sum -c >/dev/null 2>&1; then
			echo_colour "${1}: ${green_ok}"
			process_recovery_make "${1}"
			process_xattr_make "${1}"
			fixstamp "${1}"
		else
			echo_colour "${1}: ${red_failed}"
			code=1
		fi
	;;
esac
}

process_png() {
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
if type pngcheck >/dev/null 2>&1; then
	if pngcheck -q < "${1}" >/dev/null 2>&1; then
		process_recovery_make "${1}"
		process_xattr_make "${1}"
		fixstamp "${1}"
		case "${fingerprint:-"0"}" in
				0)
					echo_colour "${1}: ${green_ok}"
				;;
			esac
	else
		echo_colour "${1}: ${red_failed}"
		code=1
	fi
else
	process_recovery_make "${1}"
	process_xattr_make "${1}"
	fixstamp "${1}"
fi
}

process_jpg() {
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
if type jpeginfo >/dev/null 2>&1; then
	if jpeginfo -c -- "${1}" >/dev/null 2>&1; then
		process_recovery_make "${1}"
		process_xattr_make "${1}"
		fixstamp "${1}"
		case "${fingerprint:-"0"}" in
			0)
				echo_colour "${1}: ${green_ok}"
			;;
		esac
	else
		echo_colour "${1}: ${red_failed}"
		code=1
	fi
else
	process_recovery_make "${1}"
	process_xattr_make "${1}"
fi
}

process_rar() {
local "rar_name"
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
if type unrar >/dev/null 2>&1; then
	case "${1}" in
		*.part1.rar)
			rar_name="${1%".part1.rar"}.rar"
		;;
		*.part01.rar)
			rar_name="${rar_name%".part01.rar"}.rar"
		;;
		*.part001.rar)
			rar_name="${rar_name%".part001.rar"}.rar"
		;;
		*.part0001.rar)
			rar_name="${rar_name%".part0001.rar"}.rar"			
		;;
		*.part00001.rar)
			rar_name="${rar_name%".part00001.rar"}.rar"
		;;
		*.part[2-9].rar|*.part[0-9][0-9].rar|*.part[0-9][0-9][0-9].rar|*.part[0-9][0-9][0-9][0-9].rar|*.part[0-9][0-9][0-9][0-9][0-9].rar)
			process_recovery_make "${1}"
			process_xattr_make "${1}"
			fixstamp "${1}"
			return 0
		;;
		*.rar)
			:
		;;
	esac
	if unrar t -- "${1}" >/dev/null 2>&1; then
		process_recovery_make "${1}"
		process_xattr_make "${1}"
		fixstamp "${1}"
		case "${fingerprint:-"0"}" in
			0)
				echo_colour "${rar_name}: ${green_ok}"
			;;
		esac
	else
		echo_colour "${rar_name}: ${red_failed}"
		code=1
	fi
else
	process_recovery_make "${1}"
	process_xattr_make "${1}"
	fixstamp "${1}"
fi
}

process_zip_warn() {
local "line"
while read -r "line"; do
	case "${line#"	"}" in
		"zip warning: "*)
			return 1
		;;
	esac
done
return 0
}

process_zip() {
local "dpath" "dtmp" "one"
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
case "${strict:-"0"}" in
	0)
		one=1
	;;
	1)
		one=0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
if type zip >/dev/null 2>&1; then
	dpath=$( realpath --no-symlinks -- "${1}" )
	dtmp=$( mktemp -p "/tmp/" -d "${name}-XXXXXXXXXXXX" 2>/dev/null )
	if [ -d "${dtmp:-""}" ]; then
		trap 'process_tmp_clean 130' INT
	else
		return 1
	fi
	if ( cd -- "${dtmp}" 2>/dev/null && ln -s -- /dev/null "${1##*"/"}" 2>/dev/null && zip -FF "${dpath}" --out "${1##*"/"}" 2>/dev/null | process_zip_warn ); then
		process_tmp_clean
	else
		process_tmp_clean
		echo_colour "${1}: ${red_failed}"
		code=1
		return 1
	fi
fi
unzip -qp /dev/stdin < "${1}" >/dev/null 2>&1
case "${?}" in
	"${one}"|0)
		process_recovery_make "${1}"
		process_xattr_make "${1}"
		fixstamp "${1}"
		case "${fingerprint:-"0"}" in
			0)
				echo_colour "${1}: ${green_ok}"
			;;
		esac
	;;
	*)
		echo_colour "${1}: ${red_failed}"
		code=1
	;;
esac
}

process_zstd() {
case "${dry_run:-"0"}" in
	1)
		return 0
	;;
esac
if ! process_local_checksums "${1}"; then return 1; fi
if process_xattr "${1}"; then
	if process_xattr_check "${1}"; then
		return 0
	else
		code=1
		return 1
	fi
fi
if type zstd >/dev/null 2>&1; then
	if zstd -t -- "${1}" >/dev/null 2>&1; then
		process_recovery_make "${1}"
		process_xattr_make "${1}"
		fixstamp "${1}"
		case "${fingerprint:-"0"}" in
			0)
				echo_colour "${1}: ${green_ok}"
			;;
		esac
	else
		echo_colour "${1}: ${red_failed}"
		code=1
	fi
else
	process_recovery_make "${1}"
	process_xattr_make "${1}"
	fixstamp "${1}"
fi
}

process() {
local "type" "make"
type="${data##*"."}"
make=0
hash=0
bold_xattrs="${bold:-""}xattrs${reset:-""}"
case "${no_xattrs:-"0"}" in
	1)
		if getfattr --only-values -n "${hash_mark}" -- "${1}" >/dev/null 2>&1; then
			if setfattr -x "${hash_mark}" -- "${1}" 2>/dev/null; then
				echover "${bold_xattrs}: ${1}: Deletion ${green_ok}" 1>&2
			else
				echover "${bold_xattrs}: ${1}: Deletion ${red_failed}" 1>&2
				code=1
			fi
		else
			echover "${bold_xattrs}: ${1}: Finding attributes has ${red_failed}" 1>&2
		fi
	;;
esac
if ! devchk "${1}"; then
	return 0
fi
case "${data##*"/"}" in
	7[zZ]|[eE][xX][eE]|[bB][iI][nN]|[tT][bB][rR]|[bB][rR]|[tT][bB][zZ]|[bB][zZ]\
	|[tT][bB][zZ]2|[bB][zZ]2|[dD][eE][bB]|[tT][gG][zZ]|[gG][zZ]|[tT][xX][zZ]\
	|[xX][zZ]|[aA][vV][iI]|[mM][pP]4|[mM][kK][vV]|[pP][dD][fF]|[pP][nN][gG]\
	|[jJ][pP][gG]|[jJ][pP][eE][gG]|[rR][aA][rR]|[aA][pP][kK]|[zZ][iI][pP]\
	|[zZ][sS][tT]|[zZ][sS][tT][dD]\
	)
		if ! process_local_checksums "${1}"; then return 1; fi
		if process_xattr "${1}"; then
			if process_xattr_check "${1}"; then
				return 0
			else
				code=1
				return 1
			fi
		fi
		process_recovery_make "${1}"
		process_xattr_make "${1}"
		fixstamp "${1}"
		return 0
	;;
esac
case "${type}" in
	"${1}")
		return 0
	;;
esac
case "${type}" in
	7[zZ])
		process_seven_zip "${1}"
	;;
	[eE][xX][eE]|[mM][sS][iI])
		process_exe "${1}"
	;;
	[bB][iI][nN])
		process_bin "${1}"
	;;
	[tT][bB][rR]|[bB][rR])
		process_br "${1}"	
	;;
	[tT][bB][zZ]|[bB][zZ]|[tT][bB][zZ]2|[bB][zZ]2)
		process_bz_two "${1}"
	;;
	[dD][eE][bB])
		process_deb "${1}"
	;;
	[tT][gG][zZ]|[gG][zZ])
		process_gz "${1}"
	;;
	[tT][xX][zZ]|[xX][zZ])
		process_xz "${1}"
	;;
	[aA][vV][iI]|[mM][pP]4|[mM][kK][vV])
		process_media "${1}"
	;;
	[pP][dD][fF])
		process_pdf "${1}"
	;;
	[pP][nN][gG])
		process_png "${1}"
	;;
	[jJ][pP][gG]|[jJ][pP][eE][gG])
		process_jpg "${1}"
	;;
	[rR][aA][rR])
		process_rar "${1}"
	;;
	[aA][pP][kK]|[zZ][iI][pP]|[jJ][aA][rR])
		process_zip "${1}"
	;;
	[zZ][sS][tT]|[zZ][sS][tT][dD])
		process_zstd "${1}"
	;;
	[pP][aA][rR]2|[sS][iI][gG]|MD5SUM|SHA1SUM|SHA256SUM|SHA512SUM|TRIOSUM|QUADSUM)
		return 0
	;;
	*)
		if ! process_local_checksums "${1}"; then return 1; fi
		if process_xattr "${1}"; then
			if process_xattr_check "${1}"; then
				return 0
			else
				code=1
				return 1
			fi
		fi
		process_recovery_make "${1}"
		process_xattr_make "${1}"
		fixstamp "${1}"
	;;
esac
}

main() {
local "name"
name="${0##*"/"}"
selfcheck
setdevmode
hash_mark="user.${name}.hash"
pkgchk "awk" "b2sum" "base64" "bzip2" "cut" "find" "grep" "gzip" "head" "md5sum" "python" "realpath" "sed" "stat" "tac" "tail" "unzip" "wc" "xxd" "xz"
data_exceptions
setcert
set_colour
setopt "${@}"
exit "${code:-"0"}"
}

data_exceptions() {
time_exceptions="\
2015-03-03T15:43:46+00:00  setup_colin2005.exe
2015-01-02T18:21:51+00:00  setup_dark_fall_lights_out.exe
2018-05-16T09:44:17+00:00  setup_defcon_1.6_(20793).exe
2020-01-21T23:28:00+00:00  setup_forager_4.0.3_(35567).exe
2015-01-02T21:41:24+00:00  setup_full_spectrum_warrior_2.1.0.7.exe
2021-06-09T07:51:01+00:00  setup_jupiter_hell_0.9.10d_(64bit)_(47671).exe
2015-01-08T16:26:48+00:00  setup_obscure.exe
2015-03-06T15:50:33+00:00  setup_republic_the_revolution.exe
2015-01-09T06:41:17+00:00  setup_revolt_2.1.0.5.exe
2021-06-09T14:43:29+00:00  setup_scythe_digital_edition_1.7.12_(46982).exe
2021-06-05T12:22:21+00:00  setup_not_for_broadcast_2021.06.04a_(64bit)_(47580).exe
2020-10-13T10:24:04+00:00  setup_talisman_character_-_vampire_74912_(41937).exe
2015-03-06T13:46:27+00:00  setup_toca_3.exe
2021-06-07T16:33:22+00:00  setup_the_guild_3_ea_0.9.14_622947_(47632).exe
2021-06-04T07:40:52+00:00  setup_witchaven_ii_blood_vengeance_1.0_(47551).exe
2015-01-09T05:15:01+00:00  setup_wizardry7dos_2.0.0.11.exe

"

pdf_exceptions="\
331e0d62e010ce5b9a56d303f5d6c572a3a651df  blade_runner_conceptual_art.pdf
43ba722c0307f8c045170323a1690bdebbf976ac  blade_runner_manual_english.pdf
52457bfaa14ed6210023f5dc599649d9e8f258fd  blade_runner_manual_french.pdf
efcfcb8392ad7f0f435e3117273d6ae704b772de  blade_runner_manual_german.pdf
5a525da567018d1e92dcda1c592cce62830286ce  blade_runner_manual_polish.pdf
2e66fe73015955d9e9b1a688fc23bc89beca89e7  Desperados_Artbook_Digital.pdf
aa356cf6a307d45e4c7a1b5c0546da73911da4f2  emperor_of_the_fading_suns_manual.pdf
7a412d43f5c8eacbf4cc4086db8e3e2c14cab275  eternam_manual.pdf
8371e89439451103c2fe2f6bd06d24996d6a883b  Manual.pdf
486ac0741ef18b9a150c6f4f58556b7917604d8f  ShadowrunReturnsAnthology.pdf
c72b1e7231adc324e6e8c2de2ceb79d9ef55f3e7  warhammer_40000_da_orks_manual.pdf

"

exe_exceptions="\
7e0967f36085171aa16fa29662686d3bb644c949  setup_colin2005.exe
239f8628061e59fd0a09b4c73c536174896a8c46  setup_dark_fall_lights_out.exe
eaf746d055bddfadee0bdf56d4fb1f19cef4d04b  setup_obscure.exe
39329e5c5856eda4143725b55bd4d18b832bc381  setup_republic_the_revolution.exe
dc38029e24046fc9476a20796ed207a3a887fe2d  setup_toca_3.exe

"

bin_exceptions="\
ff235c2bcd887fc3d59af92aa780b0ed  setup_15_days_1.0_(19285)-1.bin
896d1e41bca56cb9bc9587f151f75729  setup_bloodrayne_2_1.0_(19403)-1.bin
3901d740c9071b43eae5b5e3566ef4c6  setup_broken_sword_3_-_the_sleeping_dragon_1.0_(19115)-1.bin
3931964c5eb08e8e09eb22c5860a4f9f  setup_colin2005-1.bin
9c00ae95ab1ebc512fce9c32b5d7bab4  setup_colin2005-2.bin
6392568bcc7c4a4613e09cdbb40afafd  setup_deadlight_directors_cut_gog-2(cs)_(19167)-1.bin
fa080fbdd39369969be4ac54c2aa7bd2  setup_deadlight_directors_cut_gog-2(cs)_(19167)-2.bin
1a62dce3a32d0d596bd708a259771a12  setup_expeditions_viking_1.0.7.4_(19111)-1.bin
b2791ee5edaa1c5ed93762d638ddec39  setup_expeditions_viking_1.0.7.4_(19111)-2.bin
f07fdc4bf6a8e45087b4ffe29ac776a3  setup_ken_folletts_the_pillars_of_the_earth_1.1.703_(19286)-1.bin
00df9f73b69a8d20d846a44e5a1fefc2  setup_ken_folletts_the_pillars_of_the_earth_1.1.703_(19286)-2.bin
45a14f97058182490ca043c35ce652a4  setup_ken_folletts_the_pillars_of_the_earth_1.1.703_(19286)-3.bin
0732121bf0da7db6dc6f5e5a3bc8705b  setup_little_nightmares_1.0.43.1_(18471)-1.bin
cf97be95a78dbf12584cae413eec7f6a  setup_lucius_1.043_hotfix_(19092)-1.bin
a6e0f1035d5e2f938b3f9cad9f4f973d  setup_mark_of_the_ninja_1.0_(19120)-1.bin
c65f85d535a913a47bc26932183477f2  setup_miasmata_1.0_(19144)-1.bin
a8b456fc088be36830d9ab6d067830c1  setup_obscure-1.bin
52b7e86cd78582338e322c357f726da0  setup_obscure-2.bin
6ee12e31817ed2700baa10f8da22d4ab  setup_outlast_2_gog-4_(19597)-1.bin
69f9e7b84863494c54e886137be2c729  setup_outlast_2_gog-4_(19597)-2.bin
c2bc4f41fb1c01fb7c6eb95d8dae1240  setup_outlast_2_gog-4_(19597)-3.bin
d3a9545ee47d361e8a17f82b908e5a81  setup_outlast_2_gog-4_(19597)-4.bin
1bd87af6c2bfb508ad922e14cb6fb696  setup_outlast_2_gog-4_(19597)-5.bin
202b6af4255fd95e43c1b89d3ec93e0b  setup_outlast_2_gog-4_(19597)-6.bin
7e014ef5b74d1754b598a7ad81ccce6e  setup_post_mortem_1.0_(19454)-1.bin
c589b12a4da2a54574cdedccf75e6ec9  setup_quern_-_undying_thoughts_1.2.0_hotfix2_(19136)-1.bin
e78488e9df841fc144023da9e1982c48  setup_the_mystery_of_the_druids_1.0_(19168)-1.bin
d12388215b70f2ccc9b033e8e323d392  setup_the_raven_remastered_1.1.0.654_(19262)-1.bin
01d315ba1f8808f7fa2f6210cdb8d17a  setup_the_raven_remastered_1.1.0.654_(19262)-2.bin
d361cf5faea20ec79562d1321568e9c6  setup_the_raven_remastered_1.1.0.654_(19262)-3.bin
90a24fed5d8e2e52ab1bf2de84349984  setup_the_witness_21-12-2017_(19091)-1.bin
4187245c9d32a7ddd930f26fc75dc58d  setup_toca_3-1.bin
4b3b4235d439a2409dbb108981abc147  setup_toca_3-2.bin
d6a5a69f5f6a5506adaea2c80835b183  setup_toca_3-3.bin
9401fc55950a8b8e5726e669163f7652  setup_ufo_aftershock_1.2_(19449)-1.bin
53eefd9b1e788cb1fdb068b0f34e9115  setup_ufo_aftermath_1.4_(19448)-1.bin
4754a97cfa22f7a4861961f48896b5f0  setup_mafia_iii_1.090.0_(19569)-1.bin
aa5eaf4aef380c740caa81a78563141c  setup_mafia_iii_1.090.0_(19569)-2.bin
086d4148409c1601387ef28b0935b974  setup_mafia_iii_1.090.0_(19569)-3.bin
6c76acf1fef2943b909829f8785f8634  setup_mafia_iii_1.090.0_(19569)-4.bin
f91d1aec2b776f55c3467305047dd01a  setup_mafia_iii_1.090.0_(19569)-5.bin
a070c7c3fa3a5cdf6f40f02e577ac75f  setup_mafia_iii_1.090.0_(19569)-6.bin
c15aad8d2e8d958c8744107fbc6bc995  setup_mafia_iii_1.090.0_(19569)-7.bin
18de8744ef029e0512ccd06daafd255b  setup_mafia_iii_1.090.0_(19569)-8.bin
3838974cd7f46cd4f400f5f54df509ea  setup_mafia_iii_1.090.0_(19569)-9.bin
862034c31022d7d4908e4902ad6f6bb7  setup_mafia_iii_1.090.0_(19569)-10.bin
1af264bc5d0eac6eef59e14f9e9df61c  setup_mafia_iii_1.090.0_(19569)-11.bin
59ccb31ef701f48d772406b782349213  setup_mafia_iii_1.090.0_(19569)-12.bin
9a7e9db959199ef24ae5adef7810ab52  setup_mafia_iii_1.090.0_(19569)-13.bin
3bcafdcd6d92a3ede2a8c73df72b6c39  setup_sniper_elite_-_berlin_1945_1.0_(19500)-1.bin

"
}

setcert() {
osslsigncode_certificate_fingerprints="\
b75170e5a3daf5eb94467c4a462f701e1f159d35ef8e2bb0c9c84d30dd9a821c90efaa168b247ab5052fbf74565b9c0db13a5876a8542ed169ffac27f5744b4e  setup_multiwinia_2.0.0.11.exe
07382695dcdf4d3cb9fdfd503bba137372f2049d6e9a7070eb773481239920f9b1dafada65a47c47bfbef05dfd45d38d1fa4b0f4a9baa5c8b623140f37ea5692  setup_multiwinia_2.0.0.11.exe
8025e8b81e6664b6cb104280017aea1c0b8c2acc6222aad6f8370f1929901c2feb3f1ec3f5530ff2b7f5ac1ee6e0035862ccc6579bbbd884bbb98767d4f27b00  setup_multiwinia_2.0.0.11.exe
4dd2fd7e4d12713c23e68533b1dd7ab09892268d6297240ae271a88c2898ce1d5d1d70dc50ab588a3286e4ff78b427991040d4c74adec7edbbe938674bddfb86  setup_multiwinia_2.0.0.11.exe
bbd1169132b631ad9f22efa6fa3f6bc173157042cd796a1ae00703a06aea7f82d80286cfc1300f66584e51e0c21187334bae9909f52614867e6f1ef28fafb17b  setup_worms_forts_under_siege_2.0.0.9.exe
fc74f0b9a9293aeba5a12d52b37bd0e39cdbaa7707dd3aa05c8c6a03dfc4aa52894e0757d82776f210aae6373b7835435395c03068eb38047aa311f2c80255dc  setup_dnd_dragonshard_2.0.0.10.exe
a207072181e5358a75f569f9a2564dc9862a92aa002461181b2725513a8aa17d62f8acc5067ddea1effd78369fbf9894ecbd452a08b451b680e65dc1199a76dc  setup_overlord_pack_2.0.1.10.exe
66a683958062f0dae58dc57be0cd84bf60ae1fecccb77e4b56b75c8fa72d3c2e3d24668250535f6fb1b7255065fdf66d1d368f7f3c7c16d0f824ff5f2ddcb191  setup_superfrog_2.0.0.7.exe
8fc1d3e9c94617501eb523beeb19ece4ca9bf9c7f13e2767231632eee9a7300417f30b81d788e89eef2c9d7936cad326820b0d34ef2fb0dcb7465415a16bdda5  setup_alan_wake_american_nightmare_2.1.0.24.exe
166e242c781a704e0e6c38ea0dd82f6a711f1ac97d51bad786f3ba97e73e1f41eba337a44b2d45af4cfb423f593e7b2262ca621f084ecc36f55b8c5f91e9257f  setup_badmojo_2.0.0.3.exe
4a6ba7c24fc90b42e64d9764374fbb2f75c1649efcc28103da521840ebb062e4fa012ba07cea44713044367689e96521c6e0a9e23dbb30b74e1adacfe298cf0d  setup_rocket_ranger_2.0.0.1.exe
3fb0757db00c4ec4ba0415a9ca717d68d0e8c7732bb5de08222cedc08ef66a4938895bb23cda0b2bd3a05f673a82896d26f0ad739bed9f601f59d7006fece633  setup_red_baron3d_2.1.0.24.exe
cd45533e09fda9ec21a0515b79c06861e78ca4a5fd71e2c691136ed92d68e3e9bd405120db4aa3d65e3fa8504b8b22365d9e69d55530c1c9a87891bde1c7a7fa  setup_red_baron3d_2.1.0.24.exe
9ae45ebac09f5cea3ad5f3373b5c060e1f4393bd1c372c30f4000c9ab87bb624b34e3218b7ad17ad042d124cab1f93dc16beefd4f05e6024e4524b929fcfa639  setup_caesar4_2.0.0.5.exe
f16425846b3a84237c7cc676f992e6224fccc7b3087d7753d176e5b2ee4a8a06021f4bc06ffde601dc027adecce7f380a870534f780786821dba0fe2388f04f1  setup_blazing_star_gog-3_(12081).exe
15ad11ebac0bf4c1550484b7197c6227c45d9a67d53163870af7490208822d6bb31db255df644feece00aee4eb7e0d0ba0418705d340e1fdb78228a15eabf0d7  setup_bloodrayne_betrayal_gog-2_(16593).exe
5913daed93376b32bde82b1cc5342d6fc4490ddf9a58d64ae3009cb3819617ff4ad75b040f5b9d0f77e9663a54048dde703404ab7e869a5259efef393d5b4165  setup_monstrum_1.5.0_(64bit)_(24874).exe
81d6dcf095d89a47d14918377f55b5de6142ac316f15bf5300bbff3131158efb0cd4ddbdb1156e3a8db94dc54df5f800bd76731ee2f9d751090f1f06a76624a4  setup_six_ages_ride_like_the_wind_1.0.12-1_(35222).exe
1db4c73029020778c2c58e2cfa215b4e40c6f4ae80b32928048ee4590c438dcb8cfd1c1935793e136becb65aac58c0a753f6cb94d4e7c7a20a25f3ef4a619d19  setup_papers_please_1.2.72_(43909).exe
89256a1eb4f19de9562ad8a9c32059bdf7b1e7bea35d39692b8ca4810cdf6801bd49db3b74019123cd9dda7a87cdfcb8e1193add9d06cdb1d850c874a279046e  setup_papers_please_1.2.72_(43909).exe
17b1b5bb23113b956e9c6abde5966df02015bbec2155e671bc23b4cc0641a9e192eedf47db92c34dc8c9a5bd650fbd40cd8a2252bf4e9d10a858af7f976534e9  setup_starlord_1.0_(6087).exe"

case "${dev_mode:-"0"}" in
	1)

	time_exceptions="${time_exceptions}
2015-08-26T20:39:17+00:00  areca-7.5-windows-jre32-setup.exe
2015-08-26T20:40:40+00:00  areca-7.5-windows-jre64-setup.exe
2019-12-02T02:18:22+00:00  artmoney807eng32.exe
2019-12-02T02:19:40+00:00  artmoney807eng64.exe
2011-05-02T19:59:34+00:00  FFmpeg_v0.6.2_for_Audacity_on_Windows.exe
2014-09-17T17:15:06+00:00  ffmpeg-win-2.2.2.exe
2018-10-01T10:52:10+00:00  LADSPA_plugins-win-0.4.15.exe
2018-04-13T14:24:40+00:00  lame_v3.100.exe
2012-02-02T12:48:23+00:00  Lame_v3.99.3_for_Windows.exe
2014-05-20T13:25:05+00:00  stickifier.exe
2017-05-23T20:07:27+00:00  Bitmessage-0.6.1_64.exe
2017-05-23T20:07:27+00:00  Bitmessage-0.6.1.exe
2020-01-05T10:17:56+00:00  Bochs-win32-2.6.11.exe
2020-01-05T10:17:39+00:00  Bochs-win64-2.6.11.exe
2011-06-07T04:47:09+00:00  celestia-win32-1.6.1.exe
2017-03-16T19:02:33+00:00  chemax192.exe
2017-11-09T22:42:30+00:00  citra-setup-windows.exe
2019-11-20T18:21:20+00:00  ClamAV-0.102.1.exe
2012-04-29T10:07:04+00:00  clipx-1.0.3.9g-setup-x86.exe
2019-11-07T04:58:22+00:00  CoreFTPServer64.exe
2019-11-07T04:45:54+00:00  CoreFTPServer.exe
2019-11-25T20:46:58+00:00  mini-sftp-server.exe
2019-11-25T20:50:55+00:00  mini-sftp-server.x64.exe
2014-03-27T12:19:47+00:00  doomrl-0997.exe
2016-01-16T15:48:15+00:00  dup562exedrachac-setup.exe
2013-08-29T21:21:51+00:00  EiskaltDC++-2.2.9-x86.exe
2011-10-10T19:12:19+00:00  FBReaderSetup-0.12.10.exe
2019-12-31T14:33:48+00:00  foobar2000_v1.5.1.exe
2019-12-18T21:26:19+00:00  Freeciv-2.6.1-win32-gtk3-setup.exe
2015-10-16T21:31:38+00:00  freecol-0.11.6-installer.exe
2006-05-08T11:26:41+00:00  freeUserImport.exe
2018-08-23T13:45:50+00:00  FreeOrion_v0.4.8_2018-08-23.26f16b0_Win32_Setup.exe
2010-04-18T19:23:25+00:00  gedit-setup-2.30.1-1.exe
2016-04-05T18:06:34+00:00  gedit-x86_64-3.20.1.msi
2013-10-18T07:34:43+00:00  mb_driver_chipset_intel_8series.exe
2013-10-18T07:40:04+00:00  mb_driver_intel_me_8series.exe
2014-05-13T07:24:19+00:00  mb_driver_intel_usb3_8series.exe
2014-05-13T07:38:04+00:00  mb_driver_lan_realtek_8series_win7.exe
2014-05-13T07:18:18+00:00  mb_driver_vga_intel_32_8series.exe
2014-05-13T07:18:42+00:00  mb_driver_vga_intel_64_8series.exe
2013-10-18T07:34:43+00:00  mb_driver_chipset_intel_8series.exe
2013-10-18T07:40:04+00:00  mb_driver_intel_me_8series.exe
2014-05-13T07:38:33+00:00  mb_driver_lan_realtek_8series.exe
2014-05-13T07:18:18+00:00  mb_driver_vga_intel_32_8series.exe
2014-05-13T07:18:42+00:00  mb_driver_vga_intel_64_8series.exe
2011-12-03T13:29:49+00:00  gtk2-runtime-2.24.8-2011-12-03-ash.exe
2009-09-06T19:54:10+00:00  gtk2-themes-2009-09-07-ash.exe
2018-12-19T22:27:34+00:00  gtkhash-w32-1.2+6+g8d8b353-1-installer.exe
2018-12-19T22:28:07+00:00  gtkhash-w64-1.2+6+g8d8b353-1-installer.exe
2017-03-22T18:39:41+00:00  HardlinkShellExt.exe
2009-07-09T07:13:25+00:00  HashCheckInstall-2.1.11.exe
2019-10-09T16:56:35+00:00  Hedgewars-1.0.0.exe
2019-10-21T19:06:57+00:00  setup_i2pd_v2.29.0.exe
2020-01-07T15:52:07+00:00  ADVANCED_Codecs_v1305.exe
2018-03-27T17:41:27+00:00  Icaros_v3.0.3.exe
2020-01-08T21:19:26+00:00  STANDARD_Codecs_v945.exe
2018-11-03T18:30:02+00:00  icecast_win32_2.4.4.exe
2011-01-13T09:16:28+00:00  SetupImgBurn_2.5.5.0.exe
2018-03-12T10:12:28+00:00  inkscape-0.92.3-x86.exe
2018-03-12T10:12:42+00:00  inkscape-0.92.3-x86.msi
2019-01-16T01:03:24+00:00  inkscape-0.92.4-x64.exe
2019-01-16T01:09:39+00:00  inkscape-0.92.4-x64.msi
2019-01-16T01:03:43+00:00  inkscape-0.92.4-x86.exe
2019-01-16T01:09:48+00:00  inkscape-0.92.4-x86.msi
2018-04-30T17:17:45+00:00  ISStudio_Latest.exe
2019-10-14T21:31:40+00:00  ipscan-3.6.2-setup.exe
2016-05-30T12:11:08+00:00  irfanview_adobe_8bf_plugins.exe
2017-10-11T08:54:26+00:00  irfanview_mrsid_plugin.exe
2019-12-18T21:13:04+00:00  kdenlive-19.12.0.exe
2019-12-18T21:25:39+00:00  kdenlive-19.12.0_standalone.exe
2011-11-14T21:37:31+00:00  KernelEx-4.5.2.exe
2018-05-31T13:16:19+00:00  K-Lite_Codec_Pack_1384_Basic.exe
2018-05-31T13:18:14+00:00  K-Lite_Codec_Pack_1384_Full.exe
2018-05-31T13:20:35+00:00  K-Lite_Codec_Pack_1384_Mega.exe
2018-05-31T13:22:23+00:00  K-Lite_Codec_Pack_1384_Standard.exe
2019-12-29T20:44:29+00:00  K-Lite_Codec_Pack_1532_Basic.exe
2019-12-29T20:45:58+00:00  K-Lite_Codec_Pack_1532_Full.exe
2019-12-29T20:47:46+00:00  K-Lite_Codec_Pack_1532_Mega.exe
2019-12-29T20:49:02+00:00  K-Lite_Codec_Pack_1532_Standard.exe
2019-11-16T11:40:06+00:00  kodi-18.5-Leia-x64.exe
2019-11-16T11:39:47+00:00  kodi-18.5-Leia-x86.exe
2018-11-27T02:11:46+00:00  koplayer-2.0.0.exe
2019-10-27T15:38:34+00:00  love-11.3-win32.exe
2019-10-27T15:38:34+00:00  love-11.3-win64.exe
2017-05-25T13:41:18+00:00  MegaGlest-Installer-3.13.0_windows_32bit.exe
2017-05-25T13:42:31+00:00  MegaGlest-Installer-3.13.0_windows_64bit.exe
2019-12-30T21:55:32+00:00  MultiCommander_win32_(9.5.0.2570).exe
2019-12-30T21:55:39+00:00  MultiCommander_x64_(9.5.0.2570).exe
2016-01-23T19:38:43+00:00  namebench-1.3.1-Windows.exe
2017-05-25T18:04:54+00:00  nfs-win-1.0.17083.msi
2019-04-17T03:41:04+00:00  sshfs-win-3.5.19106-x64.msi
2019-04-17T03:41:15+00:00  sshfs-win-3.5.19106-x86.msi
2019-06-19T22:17:01+00:00  nGlide210_setup.exe
2019-05-21T00:59:56+00:00  nistime-32bit.exe
2019-12-16T00:55:59+00:00  nsis-3.05-setup.exe
2019-11-17T14:05:46+00:00  OpenRA-release-20191117-x64.exe
2019-09-16T19:30:18+00:00  openttd-1.9.3-windows-win32.exe
2019-09-16T19:30:25+00:00  openttd-1.9.3-windows-win64.exe
2016-04-30T18:06:55+00:00  pcsx2-1.4.0-setup.exe
2019-12-29T17:54:55+00:00  peazip-7.0.1.WIN64.exe
2019-12-29T17:55:43+00:00  peazip-7.0.1.WINDOWS.exe
2015-06-21T04:37:48+00:00  poly3000.x32.exe
2015-06-21T04:39:23+00:00  poly3000.x64.exe
2018-02-25T00:15:11+00:00  Power8_v.1.6.1.1619.msi
2019-10-06T15:19:45+00:00  PPSSPPSetup.exe
2017-05-25T09:03:18+00:00  CharisSIL-5.000.exe
2017-05-25T08:06:47+00:00  DoulosSIL-5.000.exe
2007-05-17T00:38:15+00:00  praat4601_win98sit.exe
2007-05-17T00:37:53+00:00  praatcon4601_win98sit.exe
2018-12-31T00:49:23+00:00  privoxy_setup_3.0.28.exe
2019-12-01T15:13:12+00:00  proton-wallet.Setup.1.1.1.exe
2019-02-04T17:46:09+00:00  qemu-ga-x64.msi
2019-02-04T17:46:09+00:00  qemu-ga-x86.msi
2019-12-18T01:03:07+00:00  qbittorrent_4.2.1_setup.exe
2019-12-18T00:59:01+00:00  qbittorrent_4.2.1_x64_setup.exe
2019-10-31T03:57:38+00:00  dsp_stereo_tool_installer.exe
2019-10-17T23:45:14+00:00  renpy-7.3.5-sdk.7z.exe
2019-12-25T09:56:03+00:00  RetroArch-msvc2010-x86-setup.exe
2019-12-25T15:16:36+00:00  RetroArch-x64-setup.exe
2019-02-11T21:46:33+00:00  RetroShare-0.6.5-20190204-1-gfb005f041-Qt-5.12.0-setup.exe
2018-10-29T01:35:08+00:00  Samsung_SSD_DC_Toolkit_for_Windows.exe
2018-01-14T20:27:26+00:00  sauerbraten_2013_04_04_collect_edition_windows.exe
2019-10-04T23:17:59+00:00  scummvm-2.1.0-win32.exe
2019-10-12T17:28:51+00:00  scummvm-2.1.0-win32-win9x.exe
2019-10-04T23:17:59+00:00  scummvm-2.1.0-win32-x86_64.exe
2019-02-22T09:30:09+00:00  7z1900.exe
2019-02-22T09:30:09+00:00  7z1900-x64.exe
2017-09-18T15:12:39+00:00  Shareaza_2.7.10.2_Win32.exe
2017-09-18T15:19:06+00:00  Shareaza_2.7.10.2_x64.exe
2019-12-18T04:24:07+00:00  SiriKali-1.4.2.setup.exe
2019-12-30T15:21:41+00:00  smartmontools-7.1-1.win32-setup.exe
2012-06-08T15:50:48+00:00  SpeechAnalyzer3.1.msi
2018-04-08T07:00:01+00:00  stduviewer.exe
2019-12-24T16:17:08+00:00  stellarium-0.19.3.1-win32.exe
2019-12-24T16:18:10+00:00  stellarium-0.19.3.1-win64.exe
2020-01-03T18:30:36+00:00  SuperTuxKart 1.1.0 installer-32bit.exe
2020-01-03T18:31:55+00:00  SuperTuxKart 1.1.0 installer-64bit.exe
2017-01-17T00:19:38+00:00  syncany-0.4.8-alpha~x86.exe
2017-01-17T00:42:20+00:00  syncany-0.4.9-alpha~x86_64.exe
2017-01-16T16:03:37+00:00  syncany-cli-0.4.9-alpha.exe
2019-08-04T19:38:38+00:00  SyncthingGTK-v0.9.4.4-win32-full-installer.exe
2019-11-11T19:58:53+00:00  tagscan-6.1.2-setup.exe
2019-09-23T09:35:33+00:00  wesnoth-1.14.9-win32.exe
2018-07-20T23:18:38+00:00  setup-qtox-i686-release.exe
2018-07-20T23:19:08+00:00  setup-qtox-x86_64-release.exe
2018-03-22T17:25:50+00:00  uget-integrator_1.0.0.1.exe
2013-07-26T16:32:04+00:00  vcxsrv.1.14.2.1.installer.exe
2019-07-27T15:47:49+00:00  vcxsrv.1.20.5.1.installer.exe
2019-07-27T15:47:49+00:00  vcxsrv-64.1.20.5.1.installer.exe
2020-11-10T15:35:23+00:00  VirtualRouterInstaller.msi
2013-12-14T20:13:22+00:00  vtuploader2.2.exe
2018-06-05T14:52:20+00:00  warsow-2.1.2-setup.exe
2019-08-31T20:16:14+00:00  warzone2100-3.3.0_x86_installer.exe
2019-08-31T20:16:28+00:00  warzone2100-3.3.0_x86_portable.exe
2019-12-08T22:03:23+00:00  WaterfoxPortable_2019.12_English.paf.exe
2015-02-23T08:23:19+00:00  WinDjView-2.1-Setup.exe
2019-10-13T23:42:12+00:00  yacy_v1.922_20191014_9966.exe
2019-12-31T22:26:23+00:00  youtube-dl.exe
2019-10-30T08:22:38+00:00  YUMI-2.0.6.9.exe
2019-12-30T18:22:30+00:00  yuzu_install.exe
2018-12-09T09:54:14+00:00  0ad-0.0.23b-alpha-win32.exe

"
	
	exe_exceptions="${exe_exceptions}
1668f62c83acb1dd35349f745177963352068221  areca-7.5-windows-jre32-setup.exe
3837d152d1e4c773b2fcb87e2dc684dbe1db31b4  areca-7.5-windows-jre64-setup.exe
60445344f04556feecd9935cddd5053183913ed7  artmoney807eng32.exe
a8662d88dbba5ea18a63a26ed24dc3e4590c6f0e  artmoney807eng64.exe
fa9d6468d9ea91c5bd24014e19f767167a0cc37e  FFmpeg_v0.6.2_for_Audacity_on_Windows.exe
59829411d706b4d64023c9e05fdbc5d6c698d4fa  ffmpeg-win-2.2.2.exe
bbcdc14f464a379e5dc0dbf1b70b5beceaa651d2  LADSPA_plugins-win-0.4.15.exe
3d9b43d23001247b255e046bc6b7b7dfa7037f67  lame_v3.100.exe
a9aa7463aa9b685bdd20a5e12448c25b40a7677f  Lame_v3.99.3_for_Windows.exe
9e4cfa96a7cff1d9679ff18aacfe91f99bc531d7  stickifier.exe
306608530d8e10487de7ec25c22970bdcccf14d1  Bitmessage-0.6.1_64.exe
2d3df96da643c7f21d8c39dcceb63b3fa71043fd  Bitmessage-0.6.1.exe
493809db0ce1afd624a8e47c38edb5ee38b9fcbc  Bochs-win32-2.6.11.exe
4c3aa9d2bc67b7968633e888918f2593a535c2b1  Bochs-win64-2.6.11.exe
78c674cc834dfd7928f4afc10d06acf41e2920c2  celestia-win32-1.6.1.exe
c0f64aec36e9160014cc32ee1f0299851484d839  chemax192.exe
1f2a3b4014a309c87f0cfb03489d4360aba7720d  citra-setup-windows.exe
3069b8e568757be5721b4a86e7ba56563351691a  ClamAV-0.102.1.exe
b156ee0654536065b4fd9f7a780045541b587f89  clipx-1.0.3.9g-setup-x86.exe
b86b2a2e729a82b67846f93a5034dfc7d5ba530d  CoreFTPServer64.exe
ab3b49e3ea2695da94204ab606741899de75a140  CoreFTPServer.exe
aaa79928836268ddacda9a2b6bf22aa294c64e58  mini-sftp-server.exe
2d25f5d6b7f6b07621a047fdc58ed89553901769  mini-sftp-server.x64.exe
a1a106eda4a9b99162ec409f78ff420838b42e30  doomrl-0997.exe
3a88aae6d9afb748f38aa834402a447ccc6579de  dup562exedrachac-setup.exe
aab07a00b289950756a460fc016a8bd3453dcc98  EiskaltDC++-2.2.9-x86.exe
bd65f61df63765bdc142608514867c0503ce7eaf  FBReaderSetup-0.12.10.exe
6bdffe6142aa288f465b1de7a6867dcba36e3686  foobar2000_v1.5.1.exe
2fe8a645dd3388300787688808b21207b7e3785f  Freeciv-2.6.1-win32-gtk3-setup.exe
12ebdb085053398e8c121896a2fe5bb1dc21a1c0  freecol-0.11.6-installer.exe
39739fcf775fe228bd1b4407671cefa79defa00f  freeUserImport.exe
9ca4370327b8548c63fdbe27ed60b7dcc0302bd1  FreeOrion_v0.4.8_2018-08-23.26f16b0_Win32_Setup.exe
0d519fb3019c6eafd9422c59fefaeab94b464324  gedit-setup-2.30.1-1.exe
f31f31fc547f3376f5889393e4005b69288d7b4d  gedit-x86_64-3.20.1.msi
dc09e75a5baedae9c5ad57f0b17d5f9c4ce67809  mb_driver_chipset_intel_8series.exe
a411dddffd024e27509a3340d900facc3cfea56b  mb_driver_intel_me_8series.exe
03b1f7ccbfa5dd15f2db6e36fc9386439c6c2236  mb_driver_intel_usb3_8series.exe
84f7ed4a8c6bd6a89cb2026627911e133a25e431  mb_driver_lan_realtek_8series_win7.exe
08e226d3437bd4b56e3bbd1286b206f8c299fe55  mb_driver_vga_intel_32_8series.exe
808ae16891adf679dcc1e19b59aafd263d1aafe2  mb_driver_vga_intel_64_8series.exe
dc09e75a5baedae9c5ad57f0b17d5f9c4ce67809  mb_driver_chipset_intel_8series.exe
a411dddffd024e27509a3340d900facc3cfea56b  mb_driver_intel_me_8series.exe
01e77536afc1592c622d9a3069bb3cd1cac7b9ab  mb_driver_lan_realtek_8series.exe
08e226d3437bd4b56e3bbd1286b206f8c299fe55  mb_driver_vga_intel_32_8series.exe
808ae16891adf679dcc1e19b59aafd263d1aafe2  mb_driver_vga_intel_64_8series.exe
6ef68c6507e12630bc5c2881cc26f3b05e0fe4a4  gtk2-runtime-2.24.8-2011-12-03-ash.exe
0e0a12d5fff5e617c1c64d903dc885c5d9f6b58e  gtk2-themes-2009-09-07-ash.exe
0bbed5ab99a78e912eb56d718c7c87267e21d368  gtkhash-w32-1.2+6+g8d8b353-1-installer.exe
bcf5ef05293f7ef050ee5b676948a6ba43084ef1  gtkhash-w64-1.2+6+g8d8b353-1-installer.exe
a05df5b8bc170884c03f406cf2e211d2ba707a32  HardlinkShellExt.exe
d3cb884c8fc3f04720d176777508c4f5dd2df40c  HashCheckInstall-2.1.11.exe
58b5998767ef7d3a595d7d80079de9da6b3def7a  Hedgewars-1.0.0.exe
0dbb64d9e800339a5c6096923ecf8295cd89bc78  setup_i2pd_v2.29.0.exe
674ef4b462185427506300368e42f73546cbbd92  ADVANCED_Codecs_v1305.exe
3fe7eef0dd79fb64e41eaa77277cf3eb33215d3b  Icaros_v3.0.3.exe
faede712ddb2a1f463cc49a5130ab0567fe7a3d5  STANDARD_Codecs_v945.exe
ada83c2d110258146342daa82ed5893eda867d52  icecast_win32_2.4.4.exe
3a89daee2c931d0aaa7b102d3da9d2174dc5875e  SetupImgBurn_2.5.5.0.exe
3635871bcc0fe0db6d9ff680dac4ae16de9296e1  inkscape-0.92.3-x86.exe
766077139409b3c11159a27ef141cfd45900b8e0  inkscape-0.92.3-x86.msi
f88780116c7c27382003773cad19b0517123920c  inkscape-0.92.4-x64.exe
cef8e859d00da6abd73cca5d98291f24312fc46f  inkscape-0.92.4-x64.msi
fa5b269df9cf6a335acc15d9cee1ab443513a34e  inkscape-0.92.4-x86.exe
4c45908c45d6083c837f0c68a66deb4f08b2a182  inkscape-0.92.4-x86.msi
53b3c96f34f689505fa2fafbd1072d3431951017  ISStudio_Latest.exe
bc349262b2803caa96a56aac6ed9268570f2ed39  ipscan-3.6.2-setup.exe
d80ee6d9bffda774ee7a5039e3b819549ec8b51e  irfanview_adobe_8bf_plugins.exe
5d5a1dd3e694480c2aed97adc2caaef457800a45  irfanview_mrsid_plugin.exe
d95f14633b70843e5e1463e27c5f6a9d204cbe15  kdenlive-19.12.0.exe
64fd595dabf9014bf0e47293f58a7c0caaf506ef  kdenlive-19.12.0_standalone.exe
80e9342f1ae1a0ada5f07b6b92080d8d56617492  KernelEx-4.5.2.exe
22d6e3b75ce3d78597b403117cb5a68aac03922c  K-Lite_Codec_Pack_1384_Basic.exe
6109d9cb7e7ec0a93a2f065d72c6a2d5d8aeaaf7  K-Lite_Codec_Pack_1384_Full.exe
575872c912cf494ec66c07cbfab475b7117d2a1d  K-Lite_Codec_Pack_1384_Mega.exe
50d333296580230aee5d35c11a4eb074bac0ce7c  K-Lite_Codec_Pack_1384_Standard.exe
f39ee8517f15b9b0a1fb367ddbdc698f332540e0  K-Lite_Codec_Pack_1532_Basic.exe
4950ae00f042994a355ef093401d5d6f83ff7b29  K-Lite_Codec_Pack_1532_Full.exe
812996913c0654bb36019ebdce17b35f2e56c766  K-Lite_Codec_Pack_1532_Mega.exe
df41e5313056afbc98a90b4b0de904af835c1473  K-Lite_Codec_Pack_1532_Standard.exe
07ce791a36db7c221cf1a71adc92e6db5bf8a964  kodi-18.5-Leia-x64.exe
1a1f8f8c3fd5b1c41714189b80bccbfc2f3006c5  kodi-18.5-Leia-x86.exe
a45a667f3764eb172fa325494a96a9b42f2e0868  koplayer-2.0.0.exe
74becb12526aedef68d2068c74d3dc00901906dc  love-11.3-win32.exe
9f657d29beacef1a22c6f4c3dd27e1be7eabb015  love-11.3-win64.exe
747851ca8dbcda0ad5db0b8e152345d747781740  MegaGlest-Installer-3.13.0_windows_32bit.exe
6e7b0bbd2147e59fd412e726b2bc6db4500b0647  MegaGlest-Installer-3.13.0_windows_64bit.exe
829be5440c13962e516254dc0cfd46e5363aa04a  MultiCommander_win32_(9.5.0.2570).exe
f5bc34bb60d4c9f571b97e4e53d542a8207a8803  MultiCommander_x64_(9.5.0.2570).exe
b33778303d37bb6a2e6fe4861c72390a41f3ab7a  namebench-1.3.1-Windows.exe
90ef600589fa741e4e320a71f3543fedafaf277b  nfs-win-1.0.17083.msi
d8f9a63b1d39a74074b7a505dba4d49aca6c02fd  sshfs-win-3.5.19106-x64.msi
a2ecb95aec9a53f02d521c01cca85cfccb7aa2d5  sshfs-win-3.5.19106-x86.msi
81762943ca942b25bea37645123a19a9a3545097  nGlide210_setup.exe
9166ac8b7fa258f948b8a54cd7f25add05c86a91  nistime-32bit.exe
efc378e5a9242cfae47c072d96a8882ef33718d5  nsis-3.05-setup.exe
dde46e097d71b946b7c281fbc7c41687b1ac26d3  OpenRA-release-20191117-x64.exe
b7249246013c920fc7e221dc847b1deb651d5745  openttd-1.9.3-windows-win32.exe
bd75f2d7c989237517b98a93be4a1c824cc8c641  openttd-1.9.3-windows-win64.exe
db4ec0ca1e081f53f0870a671c4005139cf4af39  pcsx2-1.4.0-setup.exe
7bd8aa5c0dcbf5a8ef51b5e9371781babb1edfc4  peazip-7.0.1.WIN64.exe
c8dcd279077d97f81d44e95bfa68ed6b52f53e6b  peazip-7.0.1.WINDOWS.exe
5f6c8e8a4fe0797236d371e94c3e6f54d7da6912  poly3000.x32.exe
98a2f7c8bdd9198254b71fb9d375050df87098f9  poly3000.x64.exe
f8b92ac885349a9fadbac90f2066cafe20330669  Power8_v.1.6.1.1619.msi
cc18b086cd2b4fe592e49e31ecfea136b0602012  PPSSPPSetup.exe
3eef89a96c67354803a12ec8a5d66eb0a425386d  CharisSIL-5.000.exe
2f5b1e3716a3c49b0d3a6aa47b28fbe548866f88  DoulosSIL-5.000.exe
e90e9ec736d02fb9a6594b2bc5d76aaeb9ee759b  praat4601_win98sit.exe
c70033cee4bb4b84b34736efdd5c9e2e5f1d0af9  praatcon4601_win98sit.exe
0cf98c86bc6dc6af94f2b96ee5da8054ea1837ce  privoxy_setup_3.0.28.exe
c88a05f22ab7ebbadb1bdd1e532b5f4c286ef826  proton-wallet.Setup.1.1.1.exe
50cb4a3840665d4ffdff1c0d27a14074165fc501  qemu-ga-x64.msi
7f298036d0445dc32601e8416bc59e623639d282  qemu-ga-x86.msi
d9576e61e63c0b56c25135c662dc4c59688f4a1a  qbittorrent_4.2.1_setup.exe
192a86af595843062acda37a1e2ad0363fb0c157  qbittorrent_4.2.1_x64_setup.exe
bc0dec35a2bede9c787c61166148e7daddbf9345  dsp_stereo_tool_installer.exe
923360124f2c33c1668b1204bf3f2e34cc27c361  renpy-7.3.5-sdk.7z.exe
8178d9e7eb55d149008770d8b8fd6afaae46d725  RetroArch-msvc2010-x86-setup.exe
5d697f27e7551312401b39264a7ff8925a0a37bf  RetroArch-x64-setup.exe
089783fa439b21dde4e541e0159add37105fdfe3  RetroShare-0.6.5-20190204-1-gfb005f041-Qt-5.12.0-setup.exe
fcac55673b792a9e3c39e6a2dd3bf73ba84cec9f  Samsung_SSD_DC_Toolkit_for_Windows.exe
1ae628e27ba5536a8c8ad1aba39d24916944a655  sauerbraten_2013_04_04_collect_edition_windows.exe
1efc9e628b7613949bfb74547028ffe90e3b835c  scummvm-2.1.0-win32.exe
b372d569d66d8475915408220d9e6a8149eb767f  scummvm-2.1.0-win32-win9x.exe
ec98ebadca770ca70af314f9ea688415ee0d63e8  scummvm-2.1.0-win32-x86_64.exe
2f23a6389470db5d0dd2095d64939657d8d3ea9d  7z1900.exe
9fa11a63b43f83980e0b48dc9ba2cb59d545a4e8  7z1900-x64.exe
222767182c0c883f63e673b677425e2279c704dd  Shareaza_2.7.10.2_Win32.exe
7a62130327ce2562a53332be6f890d7b8dc00aec  Shareaza_2.7.10.2_x64.exe
e40cb1aa7db8c2c31da610792ec8103392202960  SiriKali-1.4.2.setup.exe
afc25bac715dd0ce06105bce75f0c8c653e040de  smartmontools-7.1-1.win32-setup.exe
f9bdff2482b54c7493b6fd00799701a7209e4654  SpeechAnalyzer3.1.msi
7896ec0f70678b6bd7e576462da72232037a28c2  stduviewer.exe
5ec8b84d937635ebb8803bef5eda4fd940050745  stellarium-0.19.3.1-win32.exe
874810f7ffbc4e1a3425cab0319cf62cd49d59bd  stellarium-0.19.3.1-win64.exe
c60e2b49df8386509f056c8cf711e27c5c3c129d  SuperTuxKart 1.1.0 installer-32bit.exe
8276e52ab9a66d2884fbb53b1dbe9ee7b6a61555  SuperTuxKart 1.1.0 installer-64bit.exe
da33888588fe69d12334d25c6dd70f1f70b13085  syncany-0.4.8-alpha~x86.exe
87f4ec2d4e45ac4ac3006ce17d21e8a079f62b92  syncany-0.4.9-alpha~x86_64.exe
36de390066995172067c48e7ce8a543064657c97  syncany-cli-0.4.9-alpha.exe
bf1a952a74155ec9171affd73e947b98557bad1a  SyncthingGTK-v0.9.4.4-win32-full-installer.exe
fd554d48fa6d59b39d905cd4894b1349a0f3b33c  tagscan-6.1.2-setup.exe
53af1bc82753df09c9904a88c4fa109563abba11  wesnoth-1.14.9-win32.exe
d38eec712f74732439b7d3854316648e5627843c  setup-qtox-i686-release.exe
54d44b86bea638be9c7e004785d4084785f51157  setup-qtox-x86_64-release.exe
f38d0eef24403b321f4085d8381d274c676ce260  uget-integrator_1.0.0.1.exe
3a6b69a7f383ff638a6d6f93f580d90f1461fc8f  vcxsrv.1.14.2.1.installer.exe
591868961110636c7dc870bf7cf51640c969360c  vcxsrv.1.20.5.1.installer.exe
4556b51226873d88380a15c81e83af2f3ba460a3  vcxsrv-64.1.20.5.1.installer.exe
c748600d547c10f00426150f330bd5b1e35f659f  VirtualRouterInstaller.msi
3ccbbfffd0da76f72dd99ac39afcfdfacd5f16e2  vtuploader2.2.exe
60b9f9974157f723a085af9e0e7fb42adc56d7c3  warsow-2.1.2-setup.exe
49bce920677f516551cd6f567030a617ddbb5e71  warzone2100-3.3.0_x86_installer.exe
aa3e6e08ff4b5881654a7da13ac4b2bda3ce2a1b  warzone2100-3.3.0_x86_portable.exe
474fa01e45926d18717c8e82c5bc2e1115a3af6a  WaterfoxPortable_2019.12_English.paf.exe
bbf32f86dc8db03a73c1331a04d73b41bc80c52b  WinDjView-2.1-Setup.exe
2303e225a57db127a7f90a173502d5e6c484ab03  yacy_v1.922_20191014_9966.exe
af3f497ecdd2b723b113a5d83bb653a943cdd8c0  youtube-dl.exe
a048a6f148b914d44e77017017e4e8761faf5778  YUMI-2.0.6.9.exe
f099126307a76bc2de3b199580ab597b02e11b2e  yuzu_install.exe
dcdde5a9130b923c08550a033e6923e1a17f7248  0ad-0.0.23b-alpha-win32.exe

"
esac

}

main "${@}"
}
